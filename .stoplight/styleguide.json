{
  "name": "DCSA-OpenAPI",
  "description": "",
  "spectralExtends": [],
  "extends": [],
  "formats": [
    "oas2",
    "oas3",
    "oas3.0",
    "oas3.1"
  ],
  "aliases": {
    "DCSA_NonObjects": {
      "id": "wf_LHod3Y0nLDIuQp-ZaV",
      "description": "Matching all `DCSA` recognized simpleTypes",
      "name": "DCSA_NonObjects",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.schemas.*"
        },
        {
          "formats": [
            "oas3"
          ],
          "given": "$.components.schemas..properties.*"
        }
      ]
    }
  },
  "rules": {
    "simpleType-validation-check-DCSA-compatibility": {
      "id": "NcwDDKQv7GMS6sOLgRGBu",
      "given": [
        "#DCSA_NonObjects"
      ],
      "severity": "error",
      "then": {
        "function": "checkRequirements"
      },
      "name": "simpleType-validation-check-DCSA-compatibility",
      "description": "Check DCSA allowed properties",
      "message": "{{error}}",
      "resolved": false
    }
  },
  "x-embeddedFunctions": [
    {
      "id": "g2DJi6h7xrIe-ljcGXDj6",
      "extendedFrom": "",
      "name": "equals",
      "content": "import { createRulesetFunction } from '@stoplight/spectral-core';\n\nexport default createRulesetFunction(\n  {\n    input: null,\n    options: {\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"value\"],\n\n      properties: {\n        value: {\n          type: [\"string\", \"integer\"]\n        }\n      }\n    },\n  },\n  // https://github.com/stoplightio/spectral/blob/develop/docs/guides/5-custom-functions.md#writing-functions\n  function equals(input, options, context) {\n    const { value } = options;\n\n    const propertyName = context.path[[context.path.length - 2]];\n    const propertyProperty = context.path[[context.path.length - 1]];\n    if (input !== undefined) {\n      if (input !== value) {\n      return [\n        {\n          message: propertyName + `.` + propertyProperty + `: value must equal \"${value}\", value provided: \"${input}\".`,\n        },\n      ];\n      }\n    } else {\n      return [\n        {\n          message: propertyName + `.` + propertyProperty + `: value must equal \"${value}\" no value provided!`,\n        },\n      ];\n    }\n  },\n);"
    },
    {
      "id": "UPXI6GiG0IVwCQgFhjc4t",
      "extendedFrom": "",
      "name": "noRefInSimpleType",
      "content": "import { createRulesetFunction } from '@stoplight/spectral-core';\n\nexport default createRulesetFunction(\n  {\n    input: null,\n    options: null,\n  },\n  // https://github.com/stoplightio/spectral/blob/develop/docs/guides/5-custom-functions.md#writing-functions\n  function noRefInSimpleType(input, options, context) {\n    if (Object.keys(input).length === 1 && input['$ref']) {\n      const propertyName = context.path[[context.path.length - 1]];\n      return [\n        {\n          message: propertyName + `: MUST not be defined using a $ref.`,\n        },\n      ];\n    }\n  }\n);"
    },
    {
      "id": "nfiSNHQHEHtWGvD7vgNLq",
      "extendedFrom": "",
      "name": "checkRequirements",
      "content": "import { createRulesetFunction } from '@stoplight/spectral-core';\n\n// Should Spectral return an error if unsupported properties are found\nconst ERROR_ON_UNSUPPORTED_PROPERTIES = true;\n\n// Should Spectral ignore checks regarding \"location\" of the property\n// (parent specific specifications (also if defined in a standard) are ignored)\nconst NO_PARENT_CHECK = new Set([\n     //'CS_v1.0.0',\n]);\n\n// List of attributes to be checked\n// For all attributes in ATTRIBUTES_TO_CHECK, this Spectral rule will make sure:\n// * if attribute is in the Spec - the attribute MUST also be in the requirements\n// * if attribute is in the requirements - then it also need to be in the Spec\nconst ATTRIBUTES_TO_CHECK= ['type', 'minLength', 'maxLength', 'pattern', 'enum', 'format', 'deprecated', 'exclusiveMaximum',\n    'exclusiveMinimum', 'maximum', 'minimum', 'minItems', 'maxItems', 'required', 'nullable', 'items', 'title', 'additionalProperties', 'default'];\n\n// List of Objects that must follow the CloudEvent Notification pattern\nconst DCSA_CLOUDEVENT_GROUP = { ShippingInstructionsNotification: {}, TransportDocumentNotification: {}, BookingNotification: {}, ArrivalNoticeNotification: {} };\n\n// Spectral will **ONLY** check the standards in this list (in the future all APIs should be covered).\nconst COVERED_STANDARDS = new Set([\n    // Arrival Notice\n    'AN_v1.0.0-Beta-1',\n    // Booking Notification\n    'BKG_NTF_v2.0.0-Beta-2',\n    \n    'BKG_NTF_v2.0.0-Beta-3',\n    // Booking\n    'BKG_v2.0.0',\n    'BKG_v2.0.0-Beta-2',\n    'BKG_v2.0.0-Beta-3',\n    // Commercial Schedules\n    'CS_v1.0.0',\n    // EBL Notification\n    'EBL_NTF_v3.0.0-Beta-2',\n    'EBL_NTF_v3.0.0-Beta-3',\n    // EBL\n    'EBL_v3.0.0',\n    'EBL_v3.0.0-Beta-2', 'EBL_ISS_RSP_v3.0.0-Beta-2', 'EBL_SUR_RSP_v3.0.0-Beta-2',\n    'EBL_v3.0.0-Beta-3', 'EBL_ISS_RSP_v3.0.0-Beta-3', 'EBL_SUR_RSP_v3.0.0-Beta-3',\n    // EBL ISS\n    'EBL_ISS_v3.0.0',\n    'EBL_ISS_v3.0.0-Beta-2',\n    'EBL_ISS_v3.0.0-Beta-3',\n    // EBL SUR\n    'EBL_SUR_v3.0.0',\n    'EBL_SUR_v3.0.0-Beta-2',\n    'EBL_SUR_v3.0.0-Beta-3',\n    // PINT\n    'EBL_PINT_v3.0.0',\n    'EBL_PINT_v3.0.0-Beta-2',\n    'EBL_PINT_v3.0.0-Beta-3',\n]);\n\n// Standard covering EBL Beta 2\nconst EBL_BETA2_GROUP = [ 'EBL_v2.0.0-Beta-2', 'EBL_ISS_v2.0.0-Beta-2', 'EBL_ISS_RSP_v2.0.0-Beta-2', 'EBL_SUR_v2.0.0-Beta-2', 'EBL_SUR_RSP_v2.0.0-Beta-2' ];\n\n// A list of accepted properties that have changed over time or are different for different standards\n// DEFAULT covers all remaining standards\n// \"GROUPS\" - e.g. EBL_BETA2_GROUP: this covers all standards in the EBL Beta 2 release (EBL, ISS, ISS_RSP, SUR, SUR_RSP, EBL_NFT, PINT)\n// - it is possible to define more groups in which the group need to be added next to where EBL_BETA2_GROUP is used\n// If 'parent' is specified - then the spec only allows the property under the list of parents\n// If no 'parent' is specified - the spec applies to all locations in the document\n// parents-specs overrule \"globalSpec\"\n// Enum and required fields (fields specified as lists) MUST be defined in same order\nconst DCSA_PROPERTIES = {\n    action: {\n        PARENTS            : { SurrenderRequestAnswer: {}, Transaction: {enum: ['ISSU','ENDO','TRNS','RESD','RESA','SACC','SREJ'] } },\n        DEFAULT            : { type: 'string', enum: ['SURR', 'SREJ'] },\n    },\n    actionCode: {\n        PARENTS            : { EndorsementChainLink: {} },\n        DEFAULT            : { type: 'string', maxLength: 50 },\n    },\n    actionDateTime: {\n        PARENTS            : { EndorsementChainLink: {} },\n        DEFAULT            : { type: 'string', format: 'date-time' },\n    },\n    ActiveReeferSettings: {\n        'BKG_v2.0.0'       : { DEFAULT: { required: ['temperatureSetpoint', 'temperatureUnit'], CHILDREN: ['temperatureSetpoint', 'temperatureUnit', 'o2Setpoint', 'co2Setpoint', 'humiditySetpoint', 'airExchangeSetpoint', 'airExchangeUnit', 'isVentilationOpen', 'isDrainholesOpen', 'isBulbMode', 'isColdTreatmentRequired', 'isControlledAtmosphereRequired', 'isPreCoolingRequired', 'isGeneratorSetRequired'] }, },\n        'BKG_v2.0.0-Beta-2': { DEFAULT: { required: ['temperatureSetpoint', 'temperatureUnit'], CHILDREN: ['temperatureSetpoint', 'temperatureUnit', 'o2Setpoint', 'co2Setpoint', 'humiditySetpoint', 'airExchangeSetpoint', 'airExchangeUnit', 'isVentilationOpen', 'isDrainholesOpen', 'isBulbMode', 'isColdTreatmentRequired', 'isControlledAtmosphereRequired', 'isPreCoolingRequired', 'isGeneratorSetRequired'] }, },\n        'BKG_v2.0.0-Beta-3': { DEFAULT: { required: ['temperatureSetpoint', 'temperatureUnit'], CHILDREN: ['temperatureSetpoint', 'temperatureUnit', 'o2Setpoint', 'co2Setpoint', 'humiditySetpoint', 'airExchangeSetpoint', 'airExchangeUnit', 'isVentilationOpen', 'isDrainholesOpen', 'isBulbMode', 'isColdTreatmentRequired', 'isControlledAtmosphereRequired', 'isPreCoolingRequired', 'isGeneratorSetRequired'] }, },\n        DEFAULT            : { type: 'object', title: 'Active Reefer Settings', CHILDREN: ['temperatureSetpoint', 'temperatureUnit', 'o2Setpoint', 'co2Setpoint', 'humiditySetpoint', 'airExchangeSetpoint', 'airExchangeUnit', 'isVentilationOpen', 'isDrainholesOpen', 'isBulbMode', 'isColdTreatmentRequired', 'isControlledAtmosphereRequired'] },\n    },\n    activeReeferSettings: {\n        PARENTS            : { RequestedEquipment: {}, RequestedEquipmentShipper: {}, UtilizedTransportEquipmentCarrier: {}, UtilizedTransportEquipment: {} },\n        DEFAULT            : { $ref: '#/components/schemas/ActiveReeferSettings' },\n    },\n    actor: {\n        PARENTS                : { EndorsementChainLink: {}, Transaction: {} },\n        DEFAULT                : { $ref: '#/components/schemas/TransactionParty' },\n    },\n    additionalContainerCargoHandling: {\n        PARENTS            : { DangerousGoods: {} },\n        DEFAULT            : { type: 'string', maxLength: 255 },\n    },\n    address: {\n        PARENTS            : {\n            Location: {$ref: '#/components/schemas/Address'},\n            LoadLocation: {$ref: '#/components/schemas/Address'},\n            DischargeLocation: {$ref: '#/components/schemas/Address'},\n            PlaceOfAcceptance: {$ref: '#/components/schemas/Address'},\n            PlaceOfFinalDelivery: {$ref: '#/components/schemas/Address'},\n            PlaceOfReceipt: {$ref: '#/components/schemas/Address'},\n            PortOfLoading: {$ref: '#/components/schemas/Address'},\n            PortOfDischarge: {$ref: '#/components/schemas/Address'},\n            PlaceOfDelivery: {$ref: '#/components/schemas/Address'},\n            OnwardInlandRouting: {$ref: '#/components/schemas/Address'},\n            BookingAgent: {$ref: '#/components/schemas/PartyAddress'},\n            Shipper: {$ref: '#/components/schemas/PartyAddress'},\n            ShipperHBL: {$ref: '#/components/schemas/PartyAddress'},\n            Consignee: {$ref: '#/components/schemas/PartyAddress'},\n            ConsigneeHBL: {$ref: '#/components/schemas/PartyAddress'},\n            Endorsee: {$ref: '#/components/schemas/PartyAddress'},\n            ServiceContractOwner: {$ref: '#/components/schemas/PartyAddress'},\n            CarrierBookingOffice: {$ref: '#/components/schemas/Address'},\n            NotifyParty: { $ref: '#/components/schemas/PartyAddress'},\n            NotifyPartyHBL: { $ref: '#/components/schemas/PartyAddress'},\n            Seller: { $ref: '#/components/schemas/PartyAddress'},\n            Buyer: { $ref: '#/components/schemas/PartyAddress'},\n            Party: {$ref: '#/components/schemas/PartyAddress'},\n            CarriersAgentAtDestination: {$ref: '#/components/schemas/Address'},\n            IssuingParty: {$ref: '#/components/schemas/PartyAddress'},\n            EmptyContainerDepotReleaseLocation: {$ref: '#/components/schemas/Address'},\n            ContainerPositioningLocation: {$ref: '#/components/schemas/Address'},\n            TransportCallLocation: { $ref: '#/components/schemas/Address' }\n        },\n    },\n    Address: {\n        'CS_v1.0.0'        : { DEFAULT: { type: 'object', title: 'Address', required: ['street', 'city', 'countryCode'], CHILDREN: ['street', 'streetNumber', 'floor', 'postCode', 'city', 'stateRegion', 'countryCode'] } },\n        DEFAULT            : { type: 'object', title: 'Address', required: ['street', 'city', 'countryCode'], CHILDREN: ['street', 'streetNumber', 'floor', 'postCode', 'POBox', 'city', 'stateRegion', 'countryCode'] },\n    },\n//    AddressLocation: {\n//        DEFAULT            : { type: 'object', title: 'Address Location', required: ['locationType', 'address'], CHILDREN: ['locationName', 'locationType', 'address'] },\n//    },\n    advanceManifestFilings: {\n        PARENTS            : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT            : { type: 'array', items: {$ref: '#/components/schemas/AdvanceManifestFiling'} },\n    },\n    AdvanceManifestFiling: {\n        'BKG_v2.0.0'       : { DEFAULT: { required: ['manifestTypeCode', 'countryCode'], CHILDREN: ['manifestTypeCode','countryCode'] } },\n        'BKG_v2.0.0-Beta-2': { DEFAULT: { required: ['manifestTypeCode', 'countryCode'], CHILDREN: ['manifestTypeCode','countryCode'] } },\n        'BKG_v2.0.0-Beta-3': { DEFAULT: { required: ['manifestTypeCode', 'countryCode'], CHILDREN: ['manifestTypeCode','countryCode'] } },\n        DEFAULT            : { type: 'object', title: 'Advance Manifest Filing', required: ['manifestTypeCode', 'countryCode', 'advanceManifestFilingsHouseBLPerformedBy'], CHILDREN: ['manifestTypeCode','countryCode','advanceManifestFilingsHouseBLPerformedBy','selfFilerCode','supplementaryDeclarantEORINumber'] },\n    },\n    advanceManifestFilingsHouseBLPerformedBy: {\n        PARENTS            : { AdvanceManifestFiling: {} },\n        DEFAULT            : { type: 'string', enum: ['SELF', 'CARRIER'] },\n    },\n    airExchangeSetpoint: {\n        PARENTS            : { ActiveReeferSettings: {} },\n        DEFAULT            : { type: 'number', format: 'float', minimum: 0 },\n    },\n    airExchangeUnit: {\n        PARENTS            : { ActiveReeferSettings: {} },\n        DEFAULT            : { type: 'string', enum: ['MQH', 'FQH']},\n    },\n    amendedBooking: {\n        DEFAULT                : { $ref: '#/components/schemas/AmendedBookingFullNotification' },\n    },\n    AmendedBookingFullNotification: {\n        DEFAULT                : { type: 'object', title: 'Amended Booking', allOf: true },\n    },\n    amendedBookingStatus: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingRefCancelledStatus: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    arrival: {\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfArrival' },\n    },\n    barge: {\n        DEFAULT             : { $ref: '#/components/schemas/Barge' },\n    },\n    Barge: {\n        DEFAULT                : { type: 'object', title: 'Barge', CHILDREN: ['vesselIMONumber','MMSINumber','name','flag','callSign','operatorCarrierCode','operatorCarrierCodeListProvider'] },\n    },\n    BargeTransport: {\n        DEFAULT                : { type: 'object', title: 'Barge Transport', required: ['modeOfTransport'], CHILDREN: ['modeOfTransport','portVisitReference','transportCallReference','servicePartners','universalServiceReference','universalExportVoyageReference','universalImportVoyageReference','barge'] },\n    },\n    Booking: {\n        DEFAULT                : { type: 'object', title: 'Booking', required: ['bookingStatus', 'receiptTypeAtOrigin', 'deliveryTypeAtDestination', 'cargoMovementTypeAtOrigin', 'cargoMovementTypeAtDestination', 'isExportDeclarationRequired', 'isImportLicenseRequired', 'isEquipmentSubstitutionAllowed', 'shipmentLocations', 'requestedEquipments', 'documentParties'] },\n    },\n    booking: {\n        DEFAULT                : { $ref: '#/components/schemas/BookingFullNotification' },\n    },\n    bookingAgent: {\n        PARENTS                : { DocumentParties: {}, DocumentPartiesReq: {} },\n        DEFAULT                : { $ref: '#/components/schemas/BookingAgent' },\n    },\n    BookingAgent: {\n        DEFAULT                : { type: 'object', title: 'Booking Agent', required: ['partyName'], CHILDREN: ['partyName', 'address', 'partyContactDetails', 'identifyingCodes', 'taxLegalReferences','reference']},\n    },\n    BookingFullNotification: {\n        DEFAULT                : { type: 'object', title: 'Booking', allOf: true },\n    },\n    bookingChannelReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', maxLength: 20, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    BookingRefCancelledStatus: {\n        DEFAULT                : { type: 'object', title: 'Cancelled Booking Response', required: ['bookingStatus'] },\n    },\n    BookingRefStatus: {\n        DEFAULT                : { type: 'object', title: 'Booking Response', required: ['bookingStatus'] },\n    },\n    BookingNotification: {\n        DEFAULT                : { type: 'object', title: 'Booking Notification', required: ['specversion', 'id', 'source', 'type', 'time', 'datacontenttype', 'subscriptionReference', 'data'] },\n    },\n    BookingNotificationData: {\n        DEFAULT                : { type: 'object', title: 'Data', required: ['bookingStatus'], CHILDREN: ['bookingStatus', 'amendedBookingStatus', 'bookingCancellationStatus', 'carrierBookingRequestReference', 'carrierBookingReference', 'feedbacks', 'booking', 'amendedBooking'] },\n    },\n    bookingStatus: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    bookingCancellationStatus: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    buyer: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Buyer' },\n    },\n    Buyer: {\n        DEFAULT                : { type: 'object', title: 'Buyer', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','identifyingCodes','taxLegalReferences'] },\n    },\n    calculationBasis: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$'},\n    },\n    callSign: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { pattern: null }, PARENTS                 : null },\n        PARENTS                : { Vessel: {}, Barge: {} },\n        DEFAULT                : { type: 'string', maxLength: 10, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    CancelBookingRequest: {\n        DEFAULT                : { type: 'object', title: 'Cancel Booking Request', CHILDREN: ['reason'] },\n    },\n    cargoGrossVolume: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {}, CargoItem: {}, CargoItemShipper: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CargoGrossVolume' },\n    },\n    CargoGrossVolume: {\n        DEFAULT                : { type: 'object', title: 'Cargo Gross Volume', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    cargoGrossWeight: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {}, CargoItem: {}, CargoItemShipper: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CargoGrossWeight' },\n    },\n    CargoGrossWeight: {\n        DEFAULT                : { type: 'object', title: 'Cargo Gross Weight', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    cargoNetVolume: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {}, CargoItem: {}, CargoItemShipper: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CargoNetVolume' },\n    },\n    CargoNetVolume: {\n        DEFAULT                : { type: 'object', title: 'Cargo Net Volume', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    cargoNetWeight: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {}, CargoItem: {}, CargoItemShipper: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CargoNetWeight' },\n    },\n    CargoNetWeight: {\n        DEFAULT                : { type: 'object', title: 'Cargo Net Weight', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    CargoItem: {\n        DEFAULT                : { type: 'object', title: 'Cargo Item', required: ['equipmentReference', 'cargoGrossWeight', 'outerPackaging'], CHILDREN: ['equipmentReference','cargoGrossWeight','cargoGrossVolume','cargoNetWeight','cargoNetVolume','outerPackaging','nationalCommodityCodes','customsReferences'] },\n    },\n    cargoItems: {\n        PARENTS                : {\n            ConsignmentItemCarrier: { items: {$ref: '#/components/schemas/CargoItem' } },\n            ConsignmentItemShipper: { items: {$ref: '#/components/schemas/CargoItemShipper' } },\n            ConsignmentItem       : { items: {$ref: '#/components/schemas/CargoItem' } }\n        },\n        DEFAULT                : { type: 'array', minItems: 1 },\n    },\n    CargoItemShipper: {\n        DEFAULT                : {type: 'object', title: 'Cargo Item (Shipper)', required: ['equipmentReference', 'cargoGrossWeight'], CHILDREN: ['equipmentReference','cargoGrossWeight','cargoGrossVolume','cargoNetWeight','cargoNetVolume','outerPackaging','nationalCommodityCodes','houseBillOfLadingReference','customsReferences'] },\n    },\n    cargoMovementTypeAtOrigin: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    cargoMovementTypeAtDestination: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    carrierBookingOffice: {\n        'BKG_v2.0.0'           : { PARENTS: { DocumentParties: {}, DocumentPartiesReq: {} } },\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CarrierBookingOffice' },\n    },\n    CarrierBookingOffice: {\n        DEFAULT                : { type: 'object', title: 'Carrier Booking Office', required: ['partyName', 'UNLocationCode'], CHILDREN: ['partyName','UNLocationCode','address','partyContactDetails'] },\n    },\n    carrierBookingRequestReference: {\n        PARENTS                : { CreateBookingResponse: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingRefCancelledStatus: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    carrierBookingReference: {\n        PARENTS                : { UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingRefCancelledStatus: {}, ConsignmentItem: {}, ConsignmentItemShipper: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    carrierClauses: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 20000, pattern: '^\\\\S(?:.*\\\\S)?$'} },\n    },\n    carrierCode: {\n        PARENTS                : { booking: {}, amendedBooking: {}, CreateBooking: {}, UpdateBooking: {}, Booking: {}, TransportDocument: {}, transportDocument: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 4, pattern: '^\\\\S+$' },\n    },\n    carrierCodeListProvider: {\n        PARENTS                : { booking: {}, amendedBooking: {}, CreateBooking: {}, UpdateBooking: {}, Booking: {}, TransportDocument: {}, transportDocument: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', enum: ['SMDG', 'NMFTA'] },\n    },\n    carrierExportVoyageNumber: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 50 } },\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, Transport: {}, VesselVoyage: {}, TransportCall: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$'},\n    },\n    carrierImportVoyageNumber: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', maxLength: 50 },\n        PARENTS                : { Transport: {}, TransportCall: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    carriersAgentAtDestination: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/CarriersAgentAtDestination' },\n    },\n    CarriersAgentAtDestination: {\n        DEFAULT                : { type: 'object', title: 'Carrier\\'s Agent At Destination', required: ['partyName', 'address', 'partyContactDetails'], CHILDREN: ['partyName','address','partyContactDetails'] },\n    },\n    carrierServiceCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { maxLength: 5 } },\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, Transport: {}, ServiceSchedule: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 11, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    carrierServiceName: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, ServiceSchedule: {}, ServicePartner: {}, ServicePartnerSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$'},\n    },\n    carrierTransportCallReference: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', maxLength: 100 },\n        PARENTS                : { timestamp: {} },\n    },\n    carrierVoyageNumber: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 50, deprecated: true } },\n    },\n    Charge: {\n        DEFAULT                : { type: 'object', title: 'Charge', required: ['chargeName', 'currencyAmount', 'currencyCode', 'paymentTermCode', 'calculationBasis', 'unitPrice', 'quantity'], CHILDREN: ['chargeName','currencyAmount','currencyCode','paymentTermCode','calculationBasis','unitPrice','quantity'] },\n    },\n    chargeName: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    charges: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/Charge'}},\n    },\n    city: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { pattern: null } },\n        PARENTS                : { PortOfLoading: { type: null, maxLength: null, pattern: null, $ref: '#/components/schemas/City' }, PortOfDischarge: { type: null, maxLength: null, pattern: null, $ref: '#/components/schemas/City' }, address: {}, Address: {}, PartyAddress: {}, City: {} },\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    City: {\n        DEFAULT                : { type: 'object', title: 'City', required: ['city', 'countryCode'], CHILDREN: ['city','stateRegion','countryCode'] },\n    },\n    co2Setpoint: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0, maximum: 100 },\n    },\n    code: {\n        PARENTS                : { Feedback: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    codedVariantList: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', minLength: 4, maxLength: 4, pattern: '^[0-3][0-9A-Z]{3}$' },\n    },\n    codeListName: {\n        PARENTS                : { IdentifyingCode: {}, identifyingCode: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    codeListProvider: {\n        PARENTS                : { IdentifyingCode: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    codeListResponsibleAgencyCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', deprecated: true, enum: ['5','6','11','20','54','182','274','296','306','399','zzz'] }, PARENTS: { identifyingCode: {} } },\n    },\n    comments: {\n        PARENTS                : { SurrenderRequestAnswer: {}, SurrenderRequestDetails: {}, Transaction: {} },\n        DEFAULT                : { type: 'string', maxLength: 255, pattern: '^\\\\S(?:.*\\\\S)?$'},\n    },\n    commodities: {\n        PARENTS                : { RequestedEquipment: { items: { $ref: '#/components/schemas/Commodity' } }, RequestedEquipmentShipper: { items: { $ref: '#/components/schemas/CommodityShipper' } } },\n        DEFAULT                : { type: 'array' },\n    },\n    CommodityShipper: {\n        DEFAULT                : { type: 'object', title: 'Commodity (Shipper)', required: ['commodityType', 'cargoGrossWeight'], CHILDREN: ['commodityType','HSCodes','nationalCommodityCodes','cargoGrossWeight','cargoGrossVolume','cargoNetWeight','cargoNetVolume','exportLicenseIssueDate','exportLicenseExpiryDate','outerPackaging','references','customsReferences'] },\n    },\n    Commodity: {\n        DEFAULT                : { type: 'object', title: 'Commodity', required: ['commodityType', 'cargoGrossWeight'], CHILDREN: ['commoditySubreference', 'commodityType','HSCodes','nationalCommodityCodes','cargoGrossWeight','cargoGrossVolume','cargoNetWeight','cargoNetVolume','exportLicenseIssueDate','exportLicenseExpiryDate','outerPackaging','references','customsReferences'] },\n    },\n    commoditySubreference: {\n        PARENTS                : { Commodity: {}, ConsignmentItemShipper: {} },\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    commodityType: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {} },\n        DEFAULT                : { type: 'string', maxLength: 550, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    competentAuthorityApproval: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 70, pattern:'^\\\\S(?:.*\\\\S)?$' },\n    },\n    confirmedEquipments: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/ConfirmedEquipment' } },\n    },\n    ConfirmedEquipment: {\n        DEFAULT                : { type: 'object', title: 'Confirmed Equipment', required: ['ISOEquipmentCode', 'units'], CHILDREN: ['ISOEquipmentCode','units','containerPositionings','emptyContainerPickup'] },\n    },\n    consignee: {\n        'BKG_v2.0.0'           : { PARENTS: { DocumentParties: {}, DocumentPartiesReq: {} } },\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Consignee' },\n    },\n    Consignee: {\n        'BKG_v2.0.0'           :   { DEFAULT: { CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences','reference','purchaseOrderReferences'] } },\n        'BKG_v2.0.0-Beta-3'    :   { DEFAULT: { CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences'] } },\n        DEFAULT                : { type: 'object', title: 'Consignee', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','displayedAddress','identifyingCodes','taxLegalReferences','partyContactDetails','reference','purchaseOrderReferences'] },\n    },\n    ConsigneeHBL: {\n        DEFAULT                : { type: 'object', title: 'Consignee', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','identifyingCodes','taxLegalReferences','partyContactDetails'] },\n    },\n    consignmentItems: {\n        PARENTS                : {CreateShippingInstructions: { items: { $ref: '#/components/schemas/ConsignmentItemShipper' } }, UpdateShippingInstructions: { items: { $ref: '#/components/schemas/ConsignmentItemShipper' } }, ShippingInstructions: { items: { $ref: '#/components/schemas/ConsignmentItemShipper' } }, shippingInstructions: { items: { $ref: '#/components/schemas/ConsignmentItemShipper' } }, updatedShippingInstructions: { items: { $ref: '#/components/schemas/ConsignmentItemShipper' } }, TransportDocument: { items: { $ref: '#/components/schemas/ConsignmentItem' } }, transportDocument: { items: { $ref: '#/components/schemas/ConsignmentItem' } } },\n        DEFAULT                : { type: 'array', minItems: 1 },\n    },\n//  ConsignmentItem: {\n//    DEFAULT                : { type: 'object', title: 'Consignment Item', required: ['carrierBookingReference', 'descriptionOfGoods', 'HSCodes'], CHILDREN: ['carrierBookingReference','descriptionOfGoods','HSCodes','shippingMarks','references','customsReferences'] },\n//  },\n    ConsignmentItem: {\n        DEFAULT                : { type: 'object', title: 'Consignment Item', required: ['carrierBookingReference', 'descriptionOfGoods', 'HSCodes','cargoItems'], CHILDREN: ['carrierBookingReference','descriptionOfGoods','HSCodes','nationalCommodityCodes','shippingMarks','cargoItems', 'references','customsReferences'] },\n    },\n    ConsignmentItemShipper: {\n        DEFAULT                : { type: 'object', title: 'Consignment Item (Shipper)', required: ['carrierBookingReference', 'descriptionOfGoods', 'HSCodes','cargoItems'], CHILDREN: ['carrierBookingReference','commoditySubreference', 'descriptionOfGoods','HSCodes','nationalCommodityCodes','shippingMarks','cargoItems','references','customsReferences'], allOf: true },\n    },\n    contact: {\n        PARENTS                : { EmergencyContactDetails: {} },\n        DEFAULT                : { type: 'string', maxLength: 255 },\n    },\n    ContainerPositioning: {\n        DEFAULT                : { type: 'object', title: 'Container Positioning', required: ['location'], CHILDREN: ['dateTime', 'location' ] },\n    },\n    ContainerPositioningEstimated: {\n        DEFAULT                : { type: 'object', title: 'Container Positioning Estimated', required: ['location'], CHILDREN: ['estimatedDateTime', 'location' ] },\n    },\n    containerPositionings : {\n        PARENTS                : { RequestedEquipment: {}, RequestedEquipmentShipper: {}, ConfirmedEquipment: { items: { $ref: '#/components/schemas/ContainerPositioningEstimated' } }},\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/ContainerPositioning' } },\n    },\n    ContainerPositioningLocation: {\n        DEFAULT                : { type: 'object', title: 'Container Positioning Location', CHILDREN: ['locationName', 'address', 'facility','UNLocationCode','geoCoordinate' ] },\n    },\n    content: {\n        PARENTS                : { SupportingDocument: {} },\n        DEFAULT                : { type: 'string', format: 'byte' },\n    },\n    contentType: {\n        PARENTS                : { SupportingDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 100, default: 'application/pdf' },\n    },\n    contractQuotationReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    country: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 75}, PARENTS: { address: {} } },\n    },\n    countryCode: {\n        PARENTS                : { PlaceOfBLIssue: {}, placeOfIssue: {}, address: {}, City: {}, Address: {}, PartyAddress: {}, AdvanceManifestFiling: {}, TaxLegalReference: {}, CustomsReference: {}, NationalCommodityCode: {} },\n        DEFAULT                : { type: 'string', maxLength: 2, minLength: 2, pattern: '^[A-Z]{2}$' },\n    },\n    CreateBooking: {\n        DEFAULT                : { type: 'object', title: 'Create Booking', required: ['receiptTypeAtOrigin', 'deliveryTypeAtDestination', 'cargoMovementTypeAtOrigin', 'cargoMovementTypeAtDestination', 'isExportDeclarationRequired', 'isImportLicenseRequired', 'isEquipmentSubstitutionAllowed', 'shipmentLocations', 'requestedEquipments', 'documentParties'] },\n    },\n    CreateBookingResponse: {\n        DEFAULT                : { type: 'object', title: 'Create Booking Response', required: ['carrierBookingRequestReference'], CHILDREN: ['carrierBookingRequestReference'] },\n    },\n    CreateShippingInstructions: {\n        DEFAULT                : { type: 'object', title: 'Create Shipping Instructions', required: ['transportDocumentTypeCode', 'isShippedOnBoardType', 'isElectronic', 'isToOrder', 'freightPaymentTermCode', 'partyContactDetails', 'documentParties', 'consignmentItems', 'utilizedTransportEquipments'] },\n    },\n    currencyAmount: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0 },\n    },\n    currencyCode: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'string', pattern: '^[A-Z]{3}$', minLength: 3, maxLength: 3 },\n    },\n    CustomsReference: {\n        DEFAULT                : { type: 'object', title: 'Customs Reference', required: ['type', 'countryCode', 'values'], CHILDREN: ['type','countryCode','values'] },\n    },\n    customsReferences: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, ConsignmentItem: {}, ConsignmentItemShipper: {}, CargoItemCarrier: {}, CargoItemShipper: {}, UtilizedTransportEquipmentCarrier: {}, UtilizedTransportEquipmentShipper: {}, TransportDocument: {}, transportDocument: {}, UtilizedTransportEquipment: {}, CargoItem: {}, RequestedEquipment: {}, RequestedEquipmentShipper: {}, Commodity: {}, CommodityShipper: {} },\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/CustomsReference' } },\n    },\n    cutOffDateTime: {\n        PARENTS                : { ShipmentCutOffTime: {}, CutOffTime: {} },\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    cutOffDateTimeCode: {\n        PARENTS                : { ShipmentCutOffTime: {}, CutOffTime: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    CutOffTime: {\n        DEFAULT                : { type: 'object', title: 'Cut-Off Time', required: ['cutOffDateTimeCode', 'cutOffDateTime'], CHILDREN: ['cutOffDateTimeCode','cutOffDateTime'] },\n    },\n    cutOffTimes: {\n        PARENTS                : { PointToPoint: {}, Schedule: {}, TransportCall: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/CutOffTime'} },\n    },\n    dangerousGoods: {\n        PARENTS                : { OuterPackaging: {}, OuterPackagingCarrier: {} },\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/DangerousGoods' } },\n    },\n    DangerousGoods: {\n        'BKG_v2.0.0'           : { DEFAULT: { required: ['properShippingName', 'imoClass', 'isMarinePollutant', 'isLimitedQuantity', 'isExceptedQuantity', 'isSalvagePackings', 'isEmptyUncleanedResidue', 'isWaste', 'isHot', 'isCompetentAuthorityApprovalRequired', 'isReportableQuantity', 'emergencyContactDetails', 'grossWeight'], CHILDREN: ['codedVariantList','properShippingName','technicalName','imoClass','subsidiaryRisk1','subsidiaryRisk2','isMarinePollutant','packingGroup','isLimitedQuantity','isExceptedQuantity','isSalvagePackings','isEmptyUncleanedResidue','isWaste','isHot','isCompetentAuthorityApprovalRequired','competentAuthorityApproval','segregationGroups','innerPackagings','emergencyContactDetails','EMSNumber','endOfHoldingTime','fumigationDateTime','isReportableQuantity','inhalationZone','grossWeight','netWeight','netExplosiveContent','netVolume','limits','specialCertificateNumber','additionalContainerCargoHandling'] } },\n        DEFAULT                : { type: 'object', title: 'Dangerous Goods', oneOf: true, required: ['properShippingName', 'imoClass'], CHILDREN: ['codedVariantList','properShippingName','technicalName','imoClass','subsidiaryRisk1','subsidiaryRisk2','isMarinePollutant','packingGroup','isLimitedQuantity','isExceptedQuantity','isSalvagePackings','isEmptyUncleanedResidue','isWaste','isHot','isCompetentAuthorityApprovalRequired','competentAuthorityApproval','segregationGroups','innerPackagings','emergencyContactDetails','EMSNumber','endOfHoldingTime','fumigationDateTime','isReportableQuantity','inhalationZone','grossWeight','netWeight','netExplosiveContent','netVolume','limits'] },\n    },\n    data: {\n        PARENTS                : { BookingNotification: { $ref: '#/components/schemas/BookingNotificationData' }, ShippingInstructionsNotification: { required: ['shippingInstructionsStatus'], CHILDREN: ['shippingInstructionsStatus', 'updatedShippingInstructionsStatus', 'shippingInstructionsReference', 'transportDocumentReference', 'feedbacks', 'shippingInstructions', 'updatedShippingInstructions'] }, TransportDocumentNotification: { required: ['transportDocumentStatus', 'transportDocumentReference'], CHILDREN: ['transportDocumentStatus', 'shippingInstructionsReference', 'transportDocumentReference', 'feedbacks', 'transportDocument'] } },\n        DEFAULT                : { type: 'object', title: 'Data' },\n    },\n    datacontenttype: {\n        PARENTS                : DCSA_CLOUDEVENT_GROUP,\n        DEFAULT                : { type: 'string', enum: ['application/json'] },\n    },\n    dateTime: {\n        PARENTS                : { PlaceOfReceipt: {}, ContainerPositioning: {}, EmptyContainerPickup: {}, PlaceOfDelivery: {}, PlaceOfArrival: {}, PlaceOfDeparture: {} },\n        DEFAULT                : { type: 'string', format: 'date-time'}\n    },\n    estimatedDateTime: {\n        PARENTS                : { ContainerPositioningEstimated: {} },\n        DEFAULT                : { type: 'string', format: 'date-time'}\n    },\n    DCSAResponsibleAgencyCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['ISO', 'UNECE', 'LLOYD', 'BIC', 'IMO', 'SCAC', 'ITIGG', 'ITU', 'SMDG', 'EXIS', 'FMC', 'CBSA', 'ZZZ'] }, PARENTS: { identifyingCode: {} } },\n    },\n    declaredValue: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0 },\n    },\n    declaredValueCurrency: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', minLength: 3, maxLength: 3, pattern: '^[A-Z]{3}$' },\n    },\n    delayReasonCode: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', maxLength: 3 }\n    },\n    deliveryTypeAtDestination: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {}, PointToPoint: {} },\n        DEFAULT                : { type: 'string', maxLength: 3, enum: ['CY', 'SD', 'CFS'] },\n    },\n    departure: {\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfDeparture' },\n    },\n    depotReleaseLocation: {\n        DEFAULT                : { $ref: '#/components/schemas/EmptyContainerDepotReleaseLocation' },\n    },\n    description: {\n        PARENTS                : { OuterPackaging: {}, InnerPackaging: {}, OuterPackagingShipper: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    descriptionOfGoods: {\n        PARENTS                : { ConsignmentItem: {}, ConsignmentItemShipper: {} },\n        DEFAULT                : { type: 'array', maxItems: 150, items: { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n    },\n    destinationChargesPaymentTerm: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {} },\n        DEFAULT                : { $ref: '#/components/schemas/DestinationChargesPaymentTerm' },\n    },\n    DestinationChargesPaymentTerm: {\n        DEFAULT                : { type: 'object', title: 'Destination Charges Payment Term', CHILDREN: ['haulageChargesPaymentTermCode','portChargesPaymentTermCode','otherChargesPaymentTermCode'] },\n    },\n    DetailedError: {\n        DEFAULT                : { type: 'object', title: 'Detailed Error', required: ['errorCodeText', 'errorCodeMessage'], CHILDREN: ['errorCode','property','value','jsonPath','errorCodeText','errorCodeMessage'] },\n    },\n    dimensionUnit: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['MTR', 'FOT'] }, PARENTS: { vessel: {} } },\n    },\n    dischargeLocation: {\n        PARENTS                : {Transport: {$ref:'#/components/schemas/DischargeLocation' } },\n    },\n    DischargeLocation: {\n        DEFAULT                : { type: 'object', title: 'Discharge Location', CHILDREN: ['locationName', 'address', 'facility', 'UNLocationCode'] },\n    },\n    displayedAddress: {\n        PARENTS                : { Shipper: {}, Consignee: {}, Endorsee: {}, NotifyParty: {} },\n        DEFAULT                : { type: 'array', maxItems: 6, items: { type: 'string', maxLength: 35 } },\n    },\n    displayedNameForPlaceOfDelivery: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', maxItems: 5, items: { type: 'string', maxLength: 35 } },\n    },\n    displayedNameForPlaceOfReceipt: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', maxItems: 5, items: { type: 'string', maxLength: 35 } },\n    },\n    displayedNameForPortOfDischarge: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', maxItems: 5, items: { type: 'string', maxLength: 35 } },\n    },\n    displayedNameForPortOfLoad: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'array', maxItems: 5, items: { type: 'string', maxLength: 35 } },\n    },\n    displayedShippedOnBoardReceivedForShipment: {\n        DEFAULT                : { type: 'string', pattern: '^\\\\S(?:.*\\\\S)?$', maxLength: 250 },\n    },\n    document: {\n        PARENTS                : { IssuanceRequest: {} },\n        DEFAULT                : { $ref: '#/components/schemas/TransportDocument' },\n    },\n    documentChecksum: {\n        DEFAULT                : { type: 'string', pattern: '^[0-9a-f]+$', maxLength: 64, minLength: 64, $ref: '#/components/schemas/DocumentChecksum' },\n    },\n    DocumentChecksum: {\n        DEFAULT                : { type: 'string', pattern: '^[0-9a-f]+$', maxLength: 64, minLength: 64 },\n    },\n    DocumentMetadata: {\n        DEFAULT                : { type: 'object', title: 'Document Metadata', required: ['name','size','mediaType','documentChecksum'], CHILDREN: ['name','size','mediaType','documentChecksum'] },\n    },\n    documentParties: {\n        'BKG_v2.0.0'           : { PARENTS: {Booking: { $ref: '#/components/schemas/DocumentParties' }, booking: { $ref: '#/components/schemas/DocumentParties' }, amendedBooking: { $ref: '#/components/schemas/DocumentParties' }, CreateBooking: { $ref: '#/components/schemas/DocumentPartiesReq' }, UpdateBooking: {$ref: '#/components/schemas/DocumentPartiesReq'} } },\n        PARENTS                : { CreateShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, UpdateShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, ShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, shippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, updatedShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, CreateBooking: { required: ['bookingAgent'] }, UpdateBooking: { required: ['bookingAgent'] }, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: { required: ['shipper','issuingParty'] }, transportDocument: { required: ['shipper','issuingParty'] }, HouseBillOfLading: { CHILDREN: ['shipper','consignee','notifyParty','seller','buyer','other'] } },\n        DEFAULT                : { type: 'object', title: 'Document Parties', CHILDREN: ['shipper','consignee','endorsee','issuingParty','carriersAgentAtDestination','notifyParties','other'] },\n    },\n    DocumentParties: {\n        'BKG_v2.0.0'           : { DEFAULT: { CHILDREN: ['bookingAgent','shipper','consignee','serviceContractOwner','carrierBookingOffice','other'] } },\n        PARENTS                : { CreateShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, UpdateShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, ShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, shippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, updatedShippingInstructions: { required: ['shipper'], CHILDREN: ['shipper','consignee','endorsee','issueTo','seller','buyer','notifyParties','other'] }, CreateBooking: { required: ['bookingAgent'] }, UpdateBooking: { required: ['bookingAgent'] }, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: { required: ['shipper','issuingParty'] }, transportDocument: { required: ['shipper','issuingParty'] }, HouseBillOfLading: { CHILDREN: ['shipper','consignee','notifyParty','seller','buyer','other'] } },\n        DEFAULT                : { type: 'object', title: 'Document Parties', CHILDREN: ['shipper','consignee','endorsee','issuingParty','carriersAgentAtDestination','notifyParties','other'] },\n    },\n    DocumentPartiesReq: {\n        DEFAULT                : { type: 'object', title: 'Document Parties', required: ['bookingAgent'], CHILDREN: ['bookingAgent','shipper','consignee','serviceContractOwner','carrierBookingOffice','other'] },\n    },\n    draft: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'number', format: 'float'}, PARENTS: { vessel: {} } },\n    },\n    duplicateOfAcceptedEnvelopeTransferChainEntrySignedContent: {\n        DEFAULT                : { type: 'string', pattern: '^[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+$' },\n    },\n    EblEnvelope: {\n        DEFAULT                : { type: 'object', title: 'Ebl Envelope', required: ['transportDocument', 'envelopeManifestSignedContent','envelopeTransferChain'], CHILDREN: ['transportDocument', 'envelopeManifestSignedContent','envelopeTransferChain'] },\n    },\n    eblPlatform: {\n        DEFAULT                : { type: 'string', maxLength: 4, pattern: '^\\\\S+$' },\n    },\n    eBLVisualisationByCarrier: {\n        PARENTS                : { IssuanceRequest: {}, EnvelopeManifest: {} },\n        DEFAULT                : { $ref: '#/components/schemas/SupportingDocument' },\n    },\n    eBLVisualisationByCarrierChecksum: {\n        DEFAULT                : { type: 'string', pattern: '^[0-9a-f]+$', maxLength: 64, minLength: 64 },\n    },\n    email: {\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^.+@\\\\S+$' },\n    },\n    EmergencyContactDetails: {\n        DEFAULT                : { type: 'object', title: 'Emergency Contact Details', required: ['contact', 'phone'], CHILDREN: ['contact','provider','phone','referenceNumber'] },\n    },\n    emergencyContactDetails: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/EmergencyContactDetails' },\n    },\n    emptyContainerPickup: {\n        DEFAULT                : { $ref: '#/components/schemas/EmptyContainerPickup' },\n    },\n    EmptyContainerPickup: {\n        DEFAULT                : { type: 'object', title: 'Empty Container Pickup', CHILDREN: ['dateTime','depotReleaseLocation'] },\n    },\n    emptyContainerPickupDateTime: {\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    emptyContainerDepotReleaseLocation: {\n        DEFAULT                : { $ref: '#/components/schemas/EmptyContainerDepotReleaseLocation' },\n    },\n    EmptyContainerDepotReleaseLocation: {\n        DEFAULT                : { type: 'object', title: 'Empty Container Depot Release Location', CHILDREN: ['locationName', 'address', 'facility','UNLocationCode','geoCoordinate' ] },\n    },\n    EMSNumber: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 7 },\n    },\n    endOfHoldingTime: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    endorsee: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Endorsee' },\n    },\n    Endorsee: {\n        DEFAULT                : { type: 'object', title: 'Endorsee', required: ['partyName'], CHILDREN: ['partyName','address','displayedAddress','identifyingCodes','taxLegalReferences','partyContactDetails'] },\n    },\n    endorsementChain: {\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/EndorsementChainLink' } },\n    },\n    EndorsementChainLink: {\n        DEFAULT                : { type: 'object', title: 'Endorsement Chain Link', required: ['actionDateTime', 'actionCode', 'actor', 'recipient'] },\n    },\n    EnvelopeManifest: {\n        DEFAULT                : { type: 'object', title: 'Envelope Manifest', required: ['transportDocumentChecksum','lastEnvelopeTransferChainEntrySignedContentChecksum','supportingDocuments'], CHILDREN: ['transportDocumentChecksum','lastEnvelopeTransferChainEntrySignedContentChecksum','eBLVisualisationByCarrier','supportingDocuments'] },\n    },\n    envelopeManifestSignedContent: {\n        DEFAULT                : { $ref: '#/components/schemas/EnvelopeManifestSignedContent' },\n    },\n    EnvelopeManifestSignedContent: {\n        DEFAULT                : { type: 'string', pattern: '^[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+$' },\n    },\n    envelopeReference: {\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    envelopeTransferChain: {\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/EnvelopeTransferChainEntrySignedContent' } },\n    },\n    EnvelopeTransferChainEntry: {\n        DEFAULT                : { type: 'object', title: 'Envelope Transfer Chain Entry', required: ['eblPlatform','transportDocumentChecksum','transactions'], CHILDREN: ['eblPlatform','transportDocumentChecksum','previousEnvelopeTransferChainEntrySignedContentChecksum','issuanceManifestSignedContent','transactions'] },\n    },\n    EnvelopeTransferChainEntrySignedContent: {\n        DEFAULT                : { type: 'string', pattern: '^[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+$' },\n    },\n    EnvelopeTransferFinishedResponse: {\n        DEFAULT                : { type: 'object', title: 'Envelope Transfer Finished Response', required: ['lastEnvelopeTransferChainEntrySignedContentChecksum','responseCode'], CHILDREN: ['lastEnvelopeTransferChainEntrySignedContentChecksum','responseCode', 'duplicateOfAcceptedEnvelopeTransferChainEntrySignedContent', 'reason', 'missingAdditionalDocumentChecksums', 'receivedAdditionalDocumentChecksums'] },\n    },\n    EnvelopeTransferFinishedResponseSignedContent: {\n        DEFAULT                : { type: 'string', pattern: '^[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+$' },\n    },\n    EnvelopeTransferStartedResponse: {\n        DEFAULT                : { type: 'object', title: 'Envelope Transfer Started Response', required: ['envelopeReference','transportDocumentChecksum','lastEnvelopeTransferChainEntrySignedContentChecksum','missingAdditionalDocumentChecksums'], CHILDREN: ['envelopeReference','transportDocumentChecksum','lastEnvelopeTransferChainEntrySignedContentChecksum','missingAdditionalDocumentChecksums'] },\n    },\n    equipment: {\n        PARENTS                : { UtilizedTransportEquipmentCarrier: { $ref: '#/components/schemas/Equipment' }, UTEquipment: { $ref: '#/components/schemas/RequiredEquipment' }, UtilizedTransportEquipment: { $ref: '#/components/schemas/Equipment' } },\n    },\n    Equipment: {\n        DEFAULT                : { type: 'object', title: 'Equipment', required: ['equipmentReference'], CHILDREN: ['equipmentReference','ISOEquipmentCode','tareWeight'] },\n    },\n    equipmentReference: {\n        PARENTS                : { CargoItemCarrier: {}, CargoItemShipper: {}, UTEquipmentReference: {}, Equipment: {}, RequiredEquipment: {}, CargoItem: {} },\n        DEFAULT                : { type: 'string', maxLength: 11, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    equipmentReferences: {\n        PARENTS                : { RequestedEquipment: {}, RequestedEquipmentShipper: {}, CargoItemCarrier: {} },\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 11, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n    },\n    errorDateTime: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', format: 'date-time' } },\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    errorCode: {\n        PARENTS                : { DetailedError: {}, errors: {}, IssuanceError: {type: 'string', maxLength: 50, pattern: '^\\\\S+$', format: null, minimum: null, maximum: null } },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 7000, maximum: 9999 },\n    },\n    errorCodeMessage: {\n        PARENTS                : { DetailedError: {}, errors: {} },\n        DEFAULT                : { type: 'string', maxLength: 5000 },\n    },\n    errorCodeText: {\n        PARENTS                : { DetailedError: {}, errors: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    ErrorResponse: {\n        DEFAULT                : { type: 'object', title: 'Error Response', required: ['httpMethod', 'requestUri', 'statusCode', 'statusCodeText', 'errorDateTime', 'errors'], CHILDREN: ['httpMethod','requestUri','statusCode','statusCodeText','statusCodeMessage','providerCorrelationReference','errorDateTime','errors'] },\n    },\n    errors: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { minItems: null, items: null } },\n        PARENTS                : { ErrorResponse: {}, IssuanceResponse: {minItems: null, maxItems: 255, items: {$ref: '#/components/schemas/IssuanceError'}} },\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/DetailedError'} },\n    },\n    estimatedEmptyContainerPickupDateTime: {\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    eventCreatedDateTime: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', format: 'date-time' }\n    },\n    eventDateTime: {\n        'jit_v1.2.0-Beta-2'    : { },\n        PARENTS                : { Timestamp: {} },\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    eventID: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', format: 'uuid' } }\n    },\n    eventLocation: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'object', title: 'Event Location' } },\n    },\n    eventType: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['OPERATIONS'] } },\n    },\n    eventTypeCode: {\n        PARENTS                : {  Timestamp: {} },\n        DEFAULT                : { type: 'string', enum: ['ARRI', 'DEPA'] },\n    },\n    eventClassifierCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['PLN', 'ACT', 'REQ', 'EST'] } },\n        PARENTS                : { Timestamp: {} },\n        DEFAULT                : { type: 'string', enum: ['PLN', 'EST', 'ACT'] },\n    },\n    expectedArrivalAtPlaceOfDeliveryStartDate: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    expectedArrivalAtPlaceOfDeliveryEndDate: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    expectedDepartureDate: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    exportDeclarationReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    exportLicenseExpiryDate: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    exportLicenseIssueDate: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    exportVoyageNumber: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 50, deprecated: true } },\n    },\n    Facility: {\n        DEFAULT                : { type: 'object', title: 'Facility', required: ['facilityCode', 'facilityCodeListProvider'], CHILDREN: ['facilityCode','facilityCodeListProvider'] },\n    },\n    facility: {\n        DEFAULT                : { $ref: '#/components/schemas/Facility' },\n    },\n    facilityCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { pattern: null }, PARENTS: { TransportCall: {}, location: {nullable: false}, eventLocation: {nullable: false} } },\n        'BKG_v2.0.0-Beta-2'    : { DEFAULT: { nullable: false, pattern: '^\\\\S(?:.*\\\\S)?$' },PARENTS: { Facility: {} } },\n        PARENTS                : { Facility: {} },\n        DEFAULT                : { type: 'string', maxLength: 6, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    facilitySMDGCode: {\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { timestamp: { nullable: false, deprecated: true } } },\n        PARENTS                : { FacilitySMDGLocation: {}, TransportCallLocation: {}, PortScheduleLocation: {} },\n        DEFAULT                : { type: 'string', maxLength: 6 },\n    },\n    FacilitySMDGLocation: {\n        DEFAULT                : { type: 'object', title: 'Facility SMDG Location', required: ['locationType', 'UNLocationCode', 'facilitySMDGCode'], CHILDREN: [] },\n    },\n    facilityTypeCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { maxLength: null }, PARENTS: { timestamp: { enum: ['PBPL', 'BRTH'] }, TransportCall: { enum: ['BOCR', 'CLOC', 'COFS', 'COYA', 'OFFD', 'DEPO', 'INTE', 'POTE', 'RAMP'] } } },\n        DEFAULT                : { type: 'string', maxLength: 4},\n    },\n    facilityCodeListProvider: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['BIC', 'SMDG'] } },\n        PARENTS                : { Facility: {} },\n        DEFAULT                : { type: 'string', enum: ['BIC', 'SMDG'] },\n    },\n    Feedback: {\n        DEFAULT                : { type: 'object', title: 'Feedback', required: ['severity', 'code', 'message'], CHILDREN: ['severity', 'code', 'message', 'jsonPath', 'property'] },\n    },\n    feedbacks: {\n        PARENTS                : { ShippingInstructions: {}, shippingInstructions: {}, updatedShippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingRefStatus: {}, BookingNotificationData: {} },\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/Feedback' } },\n    },\n    flag: {\n        PARENTS                : { Vessel: {}, Barge: {} },\n        DEFAULT                : { type: 'string', maxLength: 2, minLength: 2, pattern: '^[A-Z]{2}$' },\n    },\n    flashPoint: {\n        PARENTS                : { Limits: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    floor: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { pattern: null }, PARENTS: { Address: {}, address: {} } },\n        PARENTS                : { Address: {}, address: {}, PartyAddress: {} },\n        DEFAULT                : { type: 'string', pattern: '^\\\\S(?:.*\\\\S)?$', maxLength: 50 },\n    },\n    freeText: {\n        PARENTS                : { invoicePayableAt: {} },\n        DEFAULT                : { type: 'string', maxLength: 35 }, // In TD invoicePayableAt\n    },\n    freightPaymentTermCode: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {},  CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', enum: ['PRE', 'COL'] },\n    },\n    fumigationDateTime: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', format: 'date-time' },\n    },\n    GeoCoordinate: {\n        DEFAULT                : { type: 'object', title: 'Geo Coordinate', required: ['latitude', 'longitude'], CHILDREN: ['latitude', 'longitude'] },\n    },\n    geoCoordinate: {\n        DEFAULT                : { $ref: '#/components/schemas/GeoCoordinate' },\n    },\n    grossWeight: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/GrossWeight' },\n    },\n    GrossWeight: {\n        DEFAULT                : { type: 'object', title: 'Gross Weight', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    haulageChargesPaymentTermCode: {\n        PARENTS                : { OriginChargesPaymentTerm: {}, DestinationChargesPaymentTerm: {} },\n        DEFAULT                : { type: 'string', enum: ['PRE', 'COL'] },\n    },\n    HouseBillOfLading: {\n        DEFAULT                : { type: 'object', title: 'House Bill of Lading', required: ['houseBillOfLadingReference'], CHILDREN: ['houseBillOfLadingReference','isToOrder','placeOfAcceptance','placeOfFinalDelivery','methodOfPayment','documentParties'] },\n    },\n    houseBillOfLadingReference: {\n        DEFAULT                : { type: 'string', maxLength: 20, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    houseBillOfLadings: {\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/HouseBillOfLading'} },\n    },\n    HSCodes: {\n        PARENTS                : { CommodityShipper: {}, Commodity: {}, ConsignmentItem: { minItems: 1 }, ConsignmentItemShipper: {minItems: 1} },\n        DEFAULT                : { type: 'array', items: { type: 'string', minLength: 6, maxLength: 10, pattern: '^\\\\d{6,10}$' } },\n    },\n    httpMethod: {\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string', enum: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'OPTION', 'PATCH'] },\n    },\n    humiditySetpoint: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0, maximum: 100 },\n    },\n    id: {\n        PARENTS                : DCSA_CLOUDEVENT_GROUP,\n        DEFAULT                : { type: 'string', maxLength: 100},\n    },\n    IdentifyingCode: {\n        DEFAULT                : { type: 'object', title: 'Identifying Code', required: ['codeListProvider', 'partyCode'], CHILDREN: ['codeListProvider','partyCode','codeListName'] },\n    },\n    identifyingCodes: {\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { publisher: {} } },\n        PARENTS                : { BookingAgent: {}, Shipper: {}, ShipperHBL: {}, Consignee: {}, ConsigneeHBL: {}, Endorsee: {}, ServiceContractOwner: {}, CarrierBookingOffice: {}, Party: {}, IssuingParty: {}, IssueToParty: {}, TransactionParty: {}, SurrenderRequestedBy: {}, NotifyParty: {}, NotifyPartyHBL: {}, Seller: {}, Buyer: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/IdentifyingCode'} },\n    },\n    imoClass: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 4 },\n    },\n    imoPackagingCode: {\n        PARENTS                : { OuterPackaging: {}, OuterPackagingCarrier: {} },\n        DEFAULT                : { type: 'string', minLength: 1, maxLength: 5, pattern: '^[A-Z0-9]{1,5}$' },\n    },\n    importLicenseReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    importVoyageNumber: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', maxLength: 50, deprecated: true },\n    },\n    incoTerms: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    inhalationZone: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', minLength: 1, maxLength: 1 },\n    },\n    InnerPackaging: {\n        DEFAULT                : { type: 'object', title: 'Inner Packaging', required: ['quantity', 'material', 'description'], CHILDREN: ['quantity','material','description'] },\n    },\n    innerPackagings: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/InnerPackaging' } },\n    },\n    InvoicePayableAt: {\n        DEFAULT                : { type: 'object', title: 'Invoice Payable At', required: ['UNLocationCode'], CHILDREN: ['UNLocationCode'] },\n    },\n    invoicePayableAt: {\n        PARENTS                : { CreateBooking: { $ref: '#/components/schemas/InvoicePayableAt' }, UpdateBooking: { $ref: '#/components/schemas/InvoicePayableAt' }, Booking: { $ref: '#/components/schemas/InvoicePayableAt' }, booking: { $ref: '#/components/schemas/InvoicePayableAt' }, amendedBooking: { $ref: '#/components/schemas/InvoicePayableAt' }, CreateShippingInstructions: { required: ['UNLocationCode'] }, UpdateShippingInstructions: { required: ['UNLocationCode'] }, ShippingInstructions: { required: ['UNLocationCode'] }, shippingInstructions: { required: ['UNLocationCode'] }, updatedShippingInstructions: { required: ['UNLocationCode'] }, TransportDocument: { oneOf: true }, transportDocument: { oneOf: true } },\n        DEFAULT                : { type: 'object', title: 'Invoice Payable At', CHILDREN: ['UNLocationCode'] },\n    },\n    isBulbMode: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isCarriersAgentAtDestinationRequired: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isColdTreatmentRequired: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isCompetentAuthorityApprovalRequired: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isControlledAtmosphereRequired: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isDrainholesOpen: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isDummyVessel: {\n        PARENTS                : { Schedule: {}, VesselVoyage: {}, VesselSchedule: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isElectronic: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isEmptyUncleanedResidue: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isEquipmentSubstitutionAllowed: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isExceptedQuantity: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isExportDeclarationRequired: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isGeneratorSetRequired: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isHBLIssued: {\n        DEFAULT                : { type: 'boolean' },\n    },\n    isHot: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isImportLicenseRequired: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isLimitedQuantity: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isMarinePollutant: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isNonOperatingReefer: {\n        PARENTS                : { RequestedEquipment: {}, RequestedEquipmentShipper: {}, UtilizedTransportEquipmentCarrier: {}, UtilizedTransportEquipment: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    ISOEquipmentCode: {\n        PARENTS                : { ConfirmedEquipment: {}, RequestedEquipment: {}, RequestedEquipmentShipper: {}, Equipment: {}, RequiredEquipment: {} },\n        DEFAULT                : { type: 'string', maxLength: 4, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    isPartialLoadAllowed: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isPreCoolingRequired: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isReportableQuantity: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isSalvagePackings: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isShippedOnBoardType: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isShipperOwned: {\n        PARENTS                : { RequestedEquipment: {}, RequestedEquipmentShipper: {}, UtilizedTransportEquipmentCarrier: {}, UTEquipment: {}, UTEquipmentReference: {}, UtilizedTransportEquipment: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    IssuanceError: {\n        DEFAULT                : { type: 'object', title: 'Issuance Error', CHILDREN: ['reason', 'errorCode'] },\n    },\n    IssuanceManifest: {\n        DEFAULT                : { type: 'object', title: 'Issuance Manifest', required: ['documentChecksum', 'issueToChecksum'], CHILDREN: ['documentChecksum', 'eBLVisualisationByCarrierChecksum', 'issueToChecksum'] },\n    },\n    issuanceManifestSignedContent: {\n        DEFAULT                : { type: 'string', pattern: '^[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+\\\\.[A-Za-z0-9_-]+$' },\n    },\n    IssuanceRequest: {\n        DEFAULT                : { type: 'object', title: 'Issuance Request', required: ['document', 'issueTo', 'issuanceManifestSignedContent'] },\n    },\n    IssuanceResponse: {\n        DEFAULT                : { type: 'object', title: 'Issuance Response', required: ['transportDocumentReference', 'issuanceResponseCode'], CHILDREN: ['transportDocumentReference', 'issuanceResponseCode', 'reason', 'errors'] },\n    },\n    issuanceResponseCode: {\n        DEFAULT                : { type: 'string', enum: ['ISSU','BREQ', 'REFU'] },\n    },\n    issueDate: {\n        PARENTS                : { TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    issueTo: {\n        PARENTS                : { IssuanceRequest: {}, documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/IssueToParty' },\n    },\n    issueToChecksum: {\n        DEFAULT                : { type: 'string', pattern: '^[0-9a-f]+$', maxLength: 64, minLength: 64 },\n    },\n\n    IssueToParty: {\n        'EBL_ISS_v3.0.0'       : { DEFAULT: { required: ['partyName', 'sendToPlatform'] } },\n        DEFAULT                : { type: 'object', title: 'Issue To Party', required: ['partyName'], CHILDREN: ['partyName', 'sendToPlatform', 'identifyingCodes', 'taxLegalReferences'] },\n    },\n    issuingParty: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/IssuingParty'  },\n    },\n    IssuingParty: {\n        DEFAULT                : { type: 'object', title: 'Issuing Party', required: ['partyName', 'address'], CHILDREN: ['partyName','address','identifyingCodes','taxLegalReferences','partyContactDetails'] },\n    },\n    isToOrder: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {}, HouseBillOfLading: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isVentilationOpen: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    isWaste: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'boolean' },\n    },\n    jsonPath: {\n        PARENTS                : { Feedback: {}, DetailedError: {} },\n        DEFAULT                : { type: 'string', maxLength: 500 },\n    },\n    lastEnvelopeTransferChainEntrySignedContentChecksum: {\n        DEFAULT                : { type: 'string', minLength: 64, maxLength: 64, pattern: '^[0-9a-f]+$' },\n    },\n    latitude: {\n        'jit_v1.2.0-Beta-2'    : { type: 'string', maxLength: 10 },\n        PARENTS                : { GeoCoordinate: {} },\n        DEFAULT                : { type: 'string', maxLength: 10 },\n    },\n    Leg: {\n        DEFAULT                : { type: 'object', title: 'Leg', required: ['departure', 'arrival'], CHILDREN: ['sequenceNumber', 'transport', 'departure', 'arrival'] },\n    },\n    legs: {\n        PARENTS                : { PointToPoint: {} },\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/Leg'} },\n    },\n    lengthOverall: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'number', format: 'float' } },\n    },\n    Limits: {\n        DEFAULT                : { type: 'object', title: 'Limits', required: ['temperatureUnit'], CHILDREN: ['temperatureUnit','flashPoint','transportControlTemperature','transportEmergencyTemperature','SADT','SAPT'] },\n    },\n    limits: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Limits' },\n    },\n    loadLocation: {\n        PARENTS                : { Transport: {$ref:'#/components/schemas/LoadLocation' } },\n    },\n    LoadLocation: {\n        DEFAULT                : { type: 'object', title: 'Load Location', CHILDREN: ['locationName', 'address', 'facility', 'UNLocationCode' ] },\n    },\n    location: {\n        'CS_v1.0.0'            : { PARENTS: { PlaceOfReceipt: { $ref: '#/components/schemas/Location' }, TransportCall: { $ref: '#/components/schemas/TransportCallLocation' }, PortSchedule: { $ref: '#/components/schemas/PortScheduleLocation' }, PlaceOfDelivery: { $ref: '#/components/schemas/Location' }, PlaceOfArrival: { $ref: '#/components/schemas/Location' }, PlaceOfDeparture: { $ref: '#/components/schemas/Location' } } },\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { TransportCall: {} } },\n        PARENTS                : { ShipmentLocation: {}, ContainerPositioning: {$ref: '#/components/schemas/ContainerPositioningLocation'}, ContainerPositioningEstimated: {$ref: '#/components/schemas/ContainerPositioningLocation'} },\n        DEFAULT                : { $ref: '#/components/schemas/Location' },\n    },\n    Location: {\n        'CS_v1.0.0'            : { DEFAULT: { type: 'object', title: 'Location', CHILDREN: ['locationName','address','UNLocationCode','facility'] } },\n        DEFAULT                : { type: 'object', title: 'Location', CHILDREN: ['locationName','address','facility','UNLocationCode','geoCoordinate'] },\n    },\n    locationName: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { pattern: null },PARENTS: { location: {}, eventLocation: {} } },\n        'BKG_v2.0.0-Beta-2'    : { DEFAULT: { pattern: null },PARENTS: { AddressLocation: {}, Facility: { pattern: '^\\\\S(?:.*\\\\S)?$' }, UNLocationLocation: { pattern: '^\\\\S(?:.*\\\\S)?$' }, placeOfBLIssue: {}, placeOfIssue: {} } },\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n//    locationType: {\n//        PARENTS                : { AddressLocation: {}, CityLocation: {}, Facility: {}, UNLocationLocation: {}, FacilitySMDGLocation: {} },\n//        DEFAULT                : { type: 'string', maxLength: 4 },\n//    },\n    locationTypeCode: {\n        PARENTS                : { ShipmentLocation: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    longitude: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 11 } },\n        PARENTS                : { GeoCoordinate: {} },\n        DEFAULT                : { type: 'string', maxLength: 11 },\n    },\n    manifestTypeCode: {\n        PARENTS                : { AdvanceManifestFiling: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    material: {\n        PARENTS                : { InnerPackaging: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    mediaType: {\n        DEFAULT                : { type: 'string', maxLength:100 },\n    },\n    message: {\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { subError: {} } },\n        PARENTS                : { Feedback: {} },\n        DEFAULT                : { type: 'string', maxLength: 5000 },\n    },\n    methodOfPayment: {\n        DEFAULT                : { type: 'string', maxLength: 1 },\n    },\n    milesToDestinationPort: {\n        'jit_v1.2.0-Beta-2'    : { type: 'number', format: 'float' }\n    },\n    missingAdditionalDocumentChecksums: {\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/DocumentChecksum' } },\n    },\n    MMSINumber: {\n        DEFAULT                : { type: 'string', minLength: 9, maxLength: 9, pattern: '^\\\\d{9}$' },\n    },\n    modeOfTransport: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { enum: ['VESSEL', 'RAIL', 'TRUCK', 'BARGE'] }, PARENTS: { timestamp: { deprecated: true }, TransportCall: {} } },\n        '???'                :   { DEFAULT: { enum: ['VESSEL', 'RAIL', 'TRUCK', 'BARGE'] } },\n        PARENTS                : { Transport: {}, VesselTransport: { maxLength: null, enum: ['VESSEL']}, BargeTransport: { maxLength: null, enum: ['BARGE']}, OtherTransport: { maxLength: null, enum: ['RAIL_TRUCK', 'BARGE_TRUCK', 'BARGE_RAIL', 'MULTIMODAL', 'RAIL', 'TRUCK'] } },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    name: {\n        PARENTS                : { DocumentMetadata: {}, Vessel: { maxLength: 50 }, Barge: { maxLength: 50 }, SupportingDocument: {maxLength: 100, pattern: null }, vessel: { maxLength: 50 }, PartyContactDetail: { maxLength: 35 } },\n        DEFAULT                : { type: 'string', pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    naNumber: {\n        DEFAULT                : { type: 'string', minLength: 4, maxLength: 4, pattern: '^\\\\d{4}$' },\n    },\n    NationalCommodityCode: {\n        DEFAULT                : { type: 'object', title: 'National Commodity Code', required: ['type', 'countryCode', 'values'], CHILDREN: ['type', 'countryCode', 'values'] },\n    },\n    nationalCommodityCodes: {\n        PARENTS                : { Commodity: {}, CommodityShipper: {}, ConsignmentItem: {}, ConsignmentItemShipper: {}, CargoItem: {}, CargoItemShipper: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/NationalCommodityCode'} },\n    },\n    netExplosiveContent: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/NetExplosiveContent' },\n    },\n    NetExplosiveContent: {\n        DEFAULT                : { type: 'object', title: 'Net Explosive Content', required: ['value', 'unit'], CHILDREN: ['value','unit'] },\n    },\n    netWeight: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/NetWeight' },\n    },\n    NetWeight: {\n        DEFAULT                : { type: 'object', title: 'Net Weight', required: ['value', 'unit'], CHILDREN: ['value','unit'] },\n    },\n    netVolume: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { $ref: '#/components/schemas/NetVolume' },\n    },\n    NetVolume: {\n        DEFAULT                : { type: 'object', title: 'Net Volume', required: ['value', 'unit'], CHILDREN: ['value','unit'] },\n    },\n    nmftaCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 4, deprecated: true }, PARENTS: { publisher: {} } },\n    },\n    notifyParties: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { type: 'array', maxItems: 3, items: {$ref: '#/components/schemas/NotifyParty'} },\n    },\n    notifyParty: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/NotifyPartyHBL' },\n    },\n    NotifyParty: {\n        DEFAULT                : { type: 'object', title: 'Notify Party', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','displayedAddress','identifyingCodes','taxLegalReferences','partyContactDetails', 'reference'] },\n    },\n    NotifyPartyHBL: {\n        DEFAULT                : { type: 'object', title: 'Notify Party', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','identifyingCodes','taxLegalReferences','partyContactDetails'] },\n    },\n    number: {\n        PARENTS                : { Seal: {} },\n        DEFAULT                : { type: 'string', maxLength: 15 },\n    },\n    numberOfCopiesWithCharges: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 0 },\n    },\n    numberOfCopiesWithoutCharges: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 0 },\n    },\n    numberOfOriginalsWithCharges: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 0 },\n    },\n    numberOfOriginalsWithoutCharges: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 0 },\n    },\n    numberOfPackages: {\n        PARENTS                : { OuterPackaging: {}, OuterPackagingShipper: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 1, maximum: 99999999 },\n    },\n    numberOfRiderPages: {\n        PARENTS                : { TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 0 },\n    },\n    o2Setpoint: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0, maximum: 100 },\n    },\n    onCarriageBy: {\n        PARENTS                : { Transports: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    onwardInlandRouting: {\n        PARENTS                : { Transports: {} },\n        DEFAULT                : { $ref: '#/components/schemas/OnwardInlandRouting' },\n    },\n    OnwardInlandRouting: {\n        DEFAULT                : { type: 'object', title: 'Onward Inland Routing', CHILDREN: ['locationName','address','facility','UNLocationCode'] },\n    },\n    operationsEventTypeCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['STRT', 'CMPL', 'ARRI', 'DEPA'] } },\n    },\n    operatorCarrierCode: {\n        PARENTS                : { Vessel: {}, Barge: {} },\n        DEFAULT                : { type: 'string', maxLength: 10 },\n    },\n    operatorCarrierCodeListProvider: {\n        PARENTS                : { Vessel: {}, Barge: {} },\n        DEFAULT                : { type: 'string', enum: ['SMDG', 'NMFTA'] },\n    },\n    originChargesPaymentTerm: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {} },\n        DEFAULT                : { $ref: '#/components/schemas/OriginChargesPaymentTerm' },\n    },\n    OriginChargesPaymentTerm: {\n        DEFAULT                : { type: 'object', title: 'Origin Charges Payment Term', CHILDREN: ['haulageChargesPaymentTermCode','portChargesPaymentTermCode','otherChargesPaymentTermCode'] },\n    },\n    OuterPackaging: {\n        'BKG_v2.0.0'           : { DEFAULT: { required: null, CHILDREN: ['packageCode','imoPackagingCode','numberOfPackages','description','dangerousGoods'] } },\n        'BKG_v2.0.0-Beta-3'    : { DEFAULT: { required: null } },\n        DEFAULT                : { type: 'object', title: 'Outer Packaging', required: ['numberOfPackages', 'description'], CHILDREN: ['packageCode','imoPackagingCode','numberOfPackages','description','woodDeclaration','dangerousGoods'] },\n    },\n    outerPackaging: {\n        PARENTS                : { CommodityShipper: {$ref: '#/components/schemas/OuterPackaging'}, Commodity: {$ref: '#/components/schemas/OuterPackaging'}, CargoItemCarrier: {$ref: '#/components/schemas/OuterPackaging'}, CargoItemShipper: {$ref: '#/components/schemas/OuterPackagingShipper'}, CargoItem: {$ref: '#/components/schemas/OuterPackaging'} },\n    },\n//  OuterPackagingCarrier: {\n//    DEFAULT                : { type: 'object', title: 'Outer Packaging (Carrier)', allOf: true, CHILDREN: ['imoPackagingCode','dangerousGoods'] },\n//  },\n    OuterPackagingShipper: {\n        DEFAULT                : { type: 'object', title: 'Outer Packaging (Shipper)', required: ['numberOfPackages', 'description'], CHILDREN: ['packageCode','numberOfPackages','description','woodDeclaration'] },\n    },\n    other: {\n        'BKG_v2.0.0'           : { PARENTS: { DocumentParties: {}, DocumentPartiesReq: {} } },\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/OtherDocumentParty'} },\n    },\n    otherChargesPaymentTermCode: {\n        PARENTS                : { OriginChargesPaymentTerm: {}, DestinationChargesPaymentTerm: {} },\n        DEFAULT                : { type: 'string', enum: ['PRE', 'COL'] },\n    },\n    OtherDocumentParty: {\n        DEFAULT                : { type: 'object', title: 'Other Document Party', required: ['party', 'partyFunction'], CHILDREN: ['party','partyFunction'] },\n    },\n    OtherDocumentPartyHBL: {\n        DEFAULT                : { type: 'object', title: 'Other Document Party', required: ['party', 'partyFunction'], CHILDREN: ['party','partyFunction'] },\n    },\n    otherFacility: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 50 } },\n    },\n    OtherTransport: {\n        DEFAULT                : { type: 'object', title: 'Other Transport', additionalProperties: false, required: ['modeOfTransport'], CHILDREN: ['modeOfTransport'] },\n    },\n    packageCode: {\n        PARENTS                : { OuterPackaging: {}, OuterPackagingShipper: {} },\n        DEFAULT                : { type: 'string', minLength: 2, maxLength: 2, pattern: '^[A-Z0-9]{2}$' },\n    },\n    packingGroup: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 1, maximum: 3 },\n    },\n    party: {\n        PARENTS                : { OtherDocumentParty: {}, OtherDocumentPartyHBL: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Party' },\n    },\n    Party: {\n        DEFAULT                : { type: 'object', title: 'Party', required: ['partyName'], CHILDREN: ['partyName','address','identifyingCodes','taxLegalReferences','partyContactDetails', 'reference'] },\n    },\n    PartyAddress: {\n        DEFAULT                : { type: 'object', title: 'Party Address', required: ['street', 'city', 'countryCode'], CHILDREN: ['street','streetNumber','floor','postCode','POBox', 'city','UNLocationCode','stateRegion','countryCode'] },\n    },\n    partyCode: {\n        PARENTS                : { IdentifyingCode: {}, identifyingCode: {} },\n        DEFAULT                : { type: 'string', maxLength: 150 },\n    },\n    partyContactDetails: {\n        'BKG_v2.0.0'           : { DEFAULT: {items: {$ref: '#/components/schemas/PartyContactDetail'} },PARENTS: { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingAgent: {minItems: 1}, Shipper: {minItems: 1}, Consignee: {minItems: 1}, ServiceContractOwner: {minItems: 1}, CarrierBookingOffice: {minItems: 1}, Party: {minItems: 1} } },\n        'BKG_v2.0.0-Beta-2'    : { DEFAULT: {items: {$ref: '#/components/schemas/PartyContactDetail'} }, PARENTS: { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingAgent: {minItems: 1}, Shipper: {minItems: 1}, Consignee: {minItems: 1}, ServiceContractOwner: {minItems: 1}, CarrierBookingOffice: {minItems: 1}, Party: {minItems: 1} } },\n        'BKG_v2.0.0-Beta-3'    : { DEFAULT: {items: {$ref: '#/components/schemas/PartyContactDetail'} },PARENTS: { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, BookingAgent: {minItems: 1}, Shipper: {minItems: 1}, Consignee: {minItems: 1}, ServiceContractOwner: {minItems: 1}, CarrierBookingOffice: {minItems: 1}, Party: {minItems: 1} } },\n        PARENTS                : { CreateShippingInstructions: {minItems: 1}, UpdateShippingInstructions: {minItems: 1}, ShippingInstructions: {minItems: 1}, shippingInstructions: {minItems: 1}, updatedShippingInstructions: {minItems: 1}, Shipper: {}, ShipperHBL: {}, Consignee: {}, ConsigneeHBL: {}, Endorsee: {}, NotifyParty: {}, NotifyPartyHBL: {}, Party: {}, CarriersAgentAtDestination: {}, IssuingParty: {}, TransportDocument: {minItems: 1}, transportDocument: { minItems: 1 } },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/PartyContactDetail'} },\n    },\n    PartyContactDetail: {\n        DEFAULT                : { type: 'object', title: 'Party Contact Detail', required: ['name'], CHILDREN: ['name'] },\n    },\n    partyFunction: {\n        PARENTS                : { OtherDocumentParty: {}, OtherDocumentPartyHBL: {} },\n        DEFAULT                : { type: 'string', maxLength: 3 },\n    },\n    partyName: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 100 } },\n        PARENTS                : { BookingAgent: {}, Shipper: {}, ShipperHBL: {}, Consignee: {}, ConsigneeHBL: {}, Endorsee: {}, ServiceContractOwner: {}, CarrierBookingOffice: {}, Party: {}, CarriersAgentAtDestination: {}, IssuingParty: {}, IssueToParty: {}, TransactionParty: {}, SurrenderRequestedBy: {}, NotifyParty: {}, NotifyPartyHBL: {}, Seller: {}, Buyer: {}, ReceiverValidationResponse: {} },\n        DEFAULT                : { type: 'string', maxLength: 70, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    paymentTermCode: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'string', enum: ['PRE', 'COL'] },\n    },\n    phone: {\n        PARENTS                : { PartyContactDetail: {}, EmergencyContactDetails: {} },\n        DEFAULT                : { type: 'string', maxLength: 30, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    placeOfAcceptance: {\n        PARENTS                : { HouseBillOfLading: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfAcceptance' },\n    },\n    PlaceOfAcceptance: {\n        DEFAULT                : { type: 'object', title: 'Place of Acceptance', CHILDREN: ['locationName','address','facility','UNLocationCode','geoCoordinate'] },\n    },\n    PlaceOfArrival: {\n        DEFAULT                : { type: 'object', title: 'Place of Arrival', required: ['facilityTypeCode','location','dateTime'], CHILDREN: ['facilityTypeCode','location','dateTime'] },\n    },\n    placeOfBLIssue: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfBLIssue' },\n    },\n    PlaceOfBLIssue: {\n        DEFAULT                : { type: 'object', title: 'Place of B/L Issue', oneOf: {UNLocationCode: {}, countryCode: {} }, CHILDREN: ['locationName'] },\n    },\n    PlaceOfDeparture: {\n        DEFAULT                : { type: 'object', title: 'Place of Departure', required: ['facilityTypeCode','location','dateTime'], CHILDREN: ['facilityTypeCode','location','dateTime'] },\n    },\n    placeOfFinalDelivery: {\n        PARENTS                : { HouseBillOfLading: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfFinalDelivery' },\n    },\n    PlaceOfFinalDelivery: {\n        DEFAULT                : { type: 'object', title: 'Place of Final Delivery', CHILDREN: ['locationName','address','facility','UNLocationCode','geoCoordinate'] },\n    },\n    placeOfIssue: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'object', title: 'Place of Issue', oneOf: true, CHILDREN: ['locationName'] },\n    },\n    placeOfDelivery: {\n        PARENTS                : { Transports: {}, PointToPoint: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfDelivery' },\n    },\n    PlaceOfDelivery: {\n        'CS_v1.0.0'            : { DEFAULT: { required: ['facilityTypeCode','location','dateTime'], CHILDREN: ['facilityTypeCode','location','dateTime'] } },\n        DEFAULT                : { type: 'object', title: 'Place of Delivery', CHILDREN: ['locationName','address','facility','UNLocationCode','geoCoordinate'] },\n    },\n    placeOfReceipt: {\n        PARENTS                : { Transports: {}, PointToPoint: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PlaceOfReceipt' },\n    },\n    PlaceOfReceipt: {\n        'CS_v1.0.0'            : { DEFAULT: { required: ['facilityTypeCode','location','dateTime'], CHILDREN: ['facilityTypeCode','location','dateTime'] } },\n        DEFAULT                : { type: 'object', title: 'Place of Receipt', CHILDREN: ['locationName','address','facility','UNLocationCode','geoCoordinate'] },\n    },\n    plannedArrivalDate: {\n        PARENTS                : { Transport: {}, Transports: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    plannedDepartureDate: {\n        PARENTS                : { Transport: {}, Transports: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    POBox: {\n        DEFAULT                : { type: 'string', maxLength: 20 },\n    },\n    PointToPoint: {\n        DEFAULT                : { type: 'object', title: 'Point to Point', required: ['placeOfReceipt', 'placeOfDelivery', 'legs'], CHILDREN: ['placeOfReceipt','placeOfDelivery','receiptTypeAtOrigin','deliveryTypeAtDestination','cutOffTimes','solutionNumber','transitTime','legs'] },\n    },\n    portCallPhaseTypeCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['INBD', 'ALGS', 'SHIF', 'OUTB'] } },\n    },\n    portCallServiceTypeCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['PILO', 'MOOR', 'CRGO', 'TOWG', 'BUNK', 'WSDP', 'LASH', 'SAFE', 'FAST', 'GWAY'] } },\n    },\n    portChargesPaymentTermCode: {\n        PARENTS                : { OriginChargesPaymentTerm: {}, DestinationChargesPaymentTerm: {} },\n        DEFAULT                : { type: 'string', enum: ['PRE', 'COL'] },\n    },\n    portOfDischarge: {\n        PARENTS                : { Transports: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PortOfDischarge' },\n    },\n    PortOfDischarge: {\n        DEFAULT                : { type: 'object', title: 'Port of Discharge', CHILDREN: ['locationName','city','UNLocationCode'] },\n    },\n    portOfLoading: {\n        PARENTS                : { Transports: {} },\n        DEFAULT                : { $ref: '#/components/schemas/PortOfLoading' },\n    },\n    PortOfLoading: {\n        DEFAULT                : { type: 'object', title: 'Port of Loading', CHILDREN: ['locationName','city','UNLocationCode'] },\n    },\n    PortSchedule: {\n        DEFAULT                : { type: 'object', title: 'Port Schedule', required: ['location'], CHILDREN: ['location', 'vesselSchedules'] },\n    },\n    PortScheduleLocation: {\n        DEFAULT                : { type: 'object', title: 'Port Schedule Location', CHILDREN: ['locationName','UNLocationCode','facilitySMDGCode'] },\n    },\n    portVisitReference: {\n        PARENTS                : {  TransportCall: {}, VesselTransport: {}, BargeTransport: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    postCode: {\n        PARENTS                : { Address: {}, address: {}, PartyAddress: {} },\n        DEFAULT                : { type: 'string', maxLength: 10 },\n    },\n    preCarriageBy: {\n        PARENTS                : { Transports: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    previousEnvelopeTransferChainEntrySignedContentChecksum: {\n        DEFAULT                : { type: 'string', minLength: 64, maxLength: 64, pattern: '^[0-9a-f]+$', nullable: true },\n    },\n    property: {\n        PARENTS                : { ErrorResponse: {}, Feedback: {}, DetailedError: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    provider: {\n        PARENTS                : { EmergencyContactDetails: {} },\n        DEFAULT                : { type: 'string', maxLength: 255 },\n    },\n    properShippingName: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 250 },\n    },\n    providerCorrelationReference: {\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    publicKey: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 500 } },\n    },\n    publisher: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { $ref: true } },\n    },\n    publisherRole: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['CA', 'AG', 'VSL', 'ATH', 'PLT', 'TR', 'TWG', 'LSH', 'BUK'] } },\n    },\n    purchaseOrderReferences: {\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n    },\n    quantity: {\n        PARENTS                : { InnerPackaging: { type: 'integer', format: 'int32' }, Charge: { type: 'number', format: 'float', minimum: 0 } },\n    },\n    reason: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { maxLength: null }, PARENTS: { subError: {} } },\n        PARENTS                : { CancelBookingRequest: {}, Transaction: {maxLength: 4}, EnvelopeTransferFinishedResponse: {nullable: true, maxLength: 255}, IssuanceError: {maxLength: 255, pattern: '^\\\\S(?:.*\\\\S)?$'}, ShippingInstructions: {}, shippingInstructions: {}, updatedShippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, Booking: {}, booking: {}, amendedBooking: {}, data: {}, BookingRefStatus: {}, BookingRefCancelledStatus: {}, IssuanceResponse: {maxLength: 255, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n        DEFAULT                : { type: 'string', maxLength: 5000 },\n    },\n    reasonCode: {\n        DEFAULT                : { type: 'string', maxLength: 4 },\n    },\n    remark: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 500 } },\n    },\n    receiptTypeAtOrigin: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {}, PointToPoint: {} },\n        DEFAULT                : { type: 'string', maxLength: 3, enum: ['CY', 'SD', 'CFS'] },\n    },\n    receivedAdditionalDocumentChecksums: {\n        DEFAULT                : { type: 'array', items: { $ref: '#/components/schemas/DocumentChecksum' } },\n    },\n    receivedForShipmentDate: {\n        PARENTS                : { TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    ReceiverValidationResponse: {\n        DEFAULT                : { type: 'object', title: 'Receiver Validation Response', required: ['partyName'], CHILDREN: ['partyName'] },\n    },\n    recipient: {\n        PARENTS                : { EndorsementChainLink: {}, Transaction: {} },\n        DEFAULT                : { $ref: '#/components/schemas/TransactionParty' },\n    },\n    reference: {\n        DEFAULT                : { type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    Reference: {\n        DEFAULT                : { type: 'object', title: 'Reference', required: ['type', 'value'], CHILDREN: ['type','value'] },\n    },\n    ReferenceConsignmentItem: {\n        DEFAULT                : { type: 'object', title: 'Reference (Consignment Item)', required: ['type', 'values'], CHILDREN: ['type','values'] },\n    },\n    referenceNumber: {\n        PARENTS                : { EmergencyContactDetails: {} },\n        DEFAULT                : { type: 'string', maxLength: 255 },\n    },\n    references: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, CreateBooking: { items: {$ref: '#/components/schemas/ReferenceShipper'} }, UpdateBooking: { items: {$ref: '#/components/schemas/ReferenceShipper'} }, Booking: {}, booking: {}, amendedBooking: {}, RequestedEquipment: {}, RequestedEquipmentShipper: { items: {$ref: '#/components/schemas/ReferenceShipper'} }, CommodityShipper: { items: {$ref: '#/components/schemas/ReferenceShipper'} }, Commodity: {}, ConsignmentItem: { items: {$ref: '#/components/schemas/ReferenceConsignmentItem'} }, ConsignmentItemShipper: { items: {$ref: '#/components/schemas/ReferenceConsignmentItem'} }, UtilizedTransportEquipmentCarrier: {}, UtilizedTransportEquipmentShipper: {}, TransportDocument: {}, transportDocument: {}, UtilizedTransportEquipment: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/Reference'} },\n    },\n    ReferenceShipper: {\n        DEFAULT                : { type: 'object', title: 'Reference (Shipper)', required: ['type', 'value'], CHILDREN: ['type','value'] },\n    },\n    replyToTimestampID: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', format: 'uuid' } },\n    },\n    RequestedCarrierCertificate: {\n        DEFAULT                : { type: 'string', maxLength: 100, title: 'Requested Carrier Certificate' },\n    },\n    RequestedCarrierClause: {\n        DEFAULT                : { type: 'string', maxLength: 100, title: 'Requested Carrier Clause' },\n    },\n    requestedCarrierCertificates: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {} },\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 100 } },\n    },\n    requestedCarrierClauses: {\n        PARENTS                : { CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {} },\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 100 } },\n    },\n    RequestedEquipment: {\n        DEFAULT                : { type: 'object', title: 'Requested Equipment', required: ['ISOEquipmentCode', 'units','isShipperOwned'], oneOf: true, CHILDREN: ['ISOEquipmentCode','units','containerPositionings','emptyContainerPickup','equipmentReferences','tareWeight','isShipperOwned','isNonOperatingReefer','activeReeferSettings','references','customsReferences', 'commodities'] },\n    },\n    // RequestedEquipmentCarrier: {\n    //   DEFAULT                : { type: 'object', title: 'Requested Equipment (Carrier)', allOf: true, CHILDREN: ['commodities'] },\n    // },\n    RequestedEquipmentShipper: {\n        DEFAULT                : { type: 'object', title: 'Requested Equipment (Shipper)', required: ['ISOEquipmentCode', 'units','isShipperOwned'], oneOf: true, CHILDREN: ['ISOEquipmentCode','units','containerPositionings','emptyContainerPickup','equipmentReferences','tareWeight','isShipperOwned','isNonOperatingReefer','activeReeferSettings','references','customsReferences','commodities'] },\n    },\n    requestedEquipments: {\n        PARENTS                : { CreateBooking: {items: {$ref: '#/components/schemas/RequestedEquipmentShipper'}}, UpdateBooking: {items: {$ref: '#/components/schemas/RequestedEquipmentShipper'}}, Booking: {items: {$ref: '#/components/schemas/RequestedEquipment'}}, booking: {items: {$ref: '#/components/schemas/RequestedEquipment'}}, amendedBooking: {items: {$ref: '#/components/schemas/RequestedEquipment'}} },\n        DEFAULT                : { type: 'array', minItems: 1 },\n    },\n    requestUri: {\n        'jit_v1.2.0-Beta-2'    : { },\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string' },\n    },\n    RequiredEquipment: {\n        DEFAULT                : { type: 'object', title: 'Equipment (Required Properties)', required: ['equipmentReference', 'ISOEquipmentCode', 'tareWeight'], CHILDREN: ['equipmentReference','ISOEquipmentCode','tareWeight'] },\n    },\n    responseCode: {\n        DEFAULT                : { type: 'string', enum: ['RECE','DUPE','BSIG','BENV','MDOC','DISE'] },\n    },\n    routingOfConsignmentCountries: {\n        DEFAULT                : { type: 'array', items: { type: 'string', maxLength: 2, minLength: 2, pattern: '^[A-Z]{2}$' } },\n    },\n    SADT: {\n        PARENTS                : { Limits: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    SAPT: {\n        PARENTS                : { Limits: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    Schedule: {\n        DEFAULT                : { type: 'object', title: 'Schedule', required: ['servicePartners', 'isDummyVessel', 'timestamps'] },\n    },\n    Seal: {\n        DEFAULT                : { type: 'object', title: 'Seal', required: ['number'], CHILDREN: ['number','source'] },\n    },\n    seals: {\n        PARENTS                : { UtilizedTransportEquipmentCarrier: {}, UtilizedTransportEquipmentShipper: {}, UtilizedTransportEquipment: {} },\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/Seal'} },\n    },\n    segregationGroups: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'array', items: {type: 'string', maxLength: 2} },\n    },\n    selfFilerCode: {\n        PARENTS                : { AdvanceManifestFiling: {} },\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    seller: {\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Seller' },\n    },\n    Seller: {\n        DEFAULT                : { type: 'object', title: 'Seller', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','identifyingCodes','taxLegalReferences'] },\n    },\n    sendToPlatform: {\n        PARENTS                : { IssueToParty: {} },\n        DEFAULT                : { type: 'string', maxLength: 4, pattern: '^\\\\S+$' },\n    },\n    sequenceNumber: {\n        DEFAULT                : { type: 'integer', format: 'int32' },\n    },\n    serviceContractOwner: {\n        'BKG_v2.0.0'           : { PARENTS: { DocumentParties: {}, DocumentPartiesReq: {} } },\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/ServiceContractOwner' },\n    },\n    ServiceContractOwner: {\n        DEFAULT                : { type: 'object', title: 'Service Contract Owner', required: ['partyName'], CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences', 'reference'] },\n    },\n    serviceContractReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 30 },\n    },\n    ServicePartner: {\n        DEFAULT                : { type: 'object', title: 'Service Partner', CHILDREN: ['carrierCode','carrierCodeListProvider', 'carrierServiceName','carrierServiceCode','carrierImportVoyageNumber','carrierExportVoyageNumber'] },\n    },\n    ServicePartnerSchedule: {\n        DEFAULT                : { type: 'object', title: 'Service Partner Schedule', required: ['carrierServiceName','carrierServiceCode','carrierImportVoyageNumber','carrierExportVoyageNumber'], CHILDREN: ['carrierCode','carrierCodeListProvider','carrierServiceName','carrierServiceCode','carrierImportVoyageNumber','carrierExportVoyageNumber'] },\n    },\n    servicePartners: {\n        PARENTS                : { Schedule: {}, VesselTransport: {minItems: null, items: {$ref: '#/components/schemas/ServicePartner' } }, BargeTransport: {minItems: null, items: {$ref: '#/components/schemas/ServicePartner' } } },\n        DEFAULT                : { type: 'array', minItems: 1, items: { $ref: '#/components/schemas/ServicePartnerSchedule' } },\n    },\n    ServiceSchedule: {\n        DEFAULT                : { type: 'object', title: 'Service Schedule', required: ['carrierServiceName', 'carrierServiceCode', 'vesselSchedules'], CHILDREN: ['carrierServiceName','carrierServiceCode','universalServiceReference','vesselSchedules'] },\n    },\n    severity: {\n        PARENTS                : { Feedback: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    shipmentCutOffTimes: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/ShipmentCutOffTime'} },\n    },\n    ShipmentCutOffTime: {\n        DEFAULT                : { type: 'object', title: 'Shipment Cut-Off Time', required: ['cutOffDateTimeCode', 'cutOffDateTime'], CHILDREN: ['cutOffDateTimeCode','cutOffDateTime'] },\n    },\n    ShipmentLocation: {\n        DEFAULT                : { type: 'object', title: 'Shipment Location', required: ['location', 'locationTypeCode'], CHILDREN: ['location','locationTypeCode'] },\n    },\n    shipmentLocations: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/ShipmentLocation'} },\n    },\n    shippedOnBoardDate: {\n        PARENTS                : { TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', format: 'date' },\n    },\n    shipper: {\n        'BKG_v2.0.0'           : { PARENTS: { DocumentParties: {}, DocumentPartiesReq: {} } },\n        PARENTS                : { documentParties: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Shipper' },\n    },\n    Shipper: {\n        'BKG_v2.0.0'           : { DEFAULT: { CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences', 'reference', 'purchaseOrderReferences'] } },\n        'BKG_v2.0.0-Beta-2'    : { DEFAULT: { CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences'] } },\n        'BKG_v2.0.0-Beta-3'    : { DEFAULT: { CHILDREN: ['partyName','address','partyContactDetails','identifyingCodes','taxLegalReferences'] } },\n        DEFAULT                : { type: 'object', title: 'Shipper', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','displayedAddress','identifyingCodes','taxLegalReferences','partyContactDetails', 'reference', 'purchaseOrderReferences'] },\n    },\n    ShipperHBL: {\n        DEFAULT                : { type: 'object', title: 'Shipper', required: ['partyName'], CHILDREN: ['partyName','typeOfPerson','address','identifyingCodes','taxLegalReferences','partyContactDetails'] },\n    },\n    ShippingInstructions: {\n        DEFAULT                : { type: 'object', title: 'Shipping Instructions', required: ['shippingInstructionsStatus', 'transportDocumentTypeCode', 'isShippedOnBoardType', 'isElectronic', 'isToOrder', 'freightPaymentTermCode', 'partyContactDetails', 'documentParties', 'consignmentItems', 'utilizedTransportEquipments'] },\n    },\n    shippingInstructions: {\n        DEFAULT                : { basedOn: 'ShippingInstructions' },\n    },\n    ShippingInstructionsNotification: {\n        'ebl_ntf_v3.0.0-Beta-1': { DEFAULT: { required: ['specversion', 'id', 'source', 'type', 'time', 'datacontenttype', 'data'] } },\n        DEFAULT                : { type: 'object', title: 'Shipping Instructions Notification', required: ['specversion', 'id', 'source', 'type', 'time', 'datacontenttype', 'subscriptionReference', 'data']},\n    },\n    shippingInstructionsReference: {\n        'ebl_ntf_v3.0.0-Beta-1': { DEFAULT: { pattern: \"^\\\\S+(\\\\s+\\\\S+)*$\" }, PARENTS: { data: {} } }, //BKG NTF 2.0.0 Beta 1\n        'EBL_NTF_v3.0.0-Beta-2': { PARENTS: { data: {} } },\n        'EBL_NTF_v3.0.0-Beta-3': { PARENTS: { data: {} } },\n        PARENTS                : { UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, TransportDocument: {}, transportDocument: {}, data: {} },\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    ShippingInstructionsRefCancelStatus: {\n        DEFAULT                : { type: 'object', title: 'Shipping Instructions Cancel Response', required: ['shippingInstructionsStatus'] },\n    },\n    ShippingInstructionsRefStatus: {\n        DEFAULT                : { type: 'object', title: 'Shipping Instructions Response', required: ['shippingInstructionsStatus'] },\n    },\n    shippingInstructionsStatus: {\n        'ebl_ntf_v3.0.0-Beta-1'     : { PARENTS: { data: {} } },\n        'EBL_NTF_v3.0.0-Beta-2'     : { PARENTS: { data: {} } },\n        'EBL_NTF_v3.0.0-Beta-3'     : { PARENTS: { data: {} } },\n        PARENTS                : { ShippingInstructions: {}, shippingInstructions: {}, updatedShippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, data: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    shippingMarks: {\n        PARENTS                : { ConsignmentItem: {}, ConsignmentItemShipper: {}, UtilizedTransportEquipment: {}, UtilizedTransportEquipmentShipper: {} },\n        DEFAULT                : { type: 'array', maxItems: 50, items: {type: 'string', maxLength: 35 } },\n    },\n    size: {\n        PARENTS                : { DocumentMetadata: {} },\n        DEFAULT                : { type: 'number', minimum: 1 }\n    },\n    solutionNumber: {\n        PARENTS                : { PointToPoint: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 1 }\n    },\n    source: {\n        // Removing DCSA_CLOUDEVENT_GROUP in the default in order to handle 'source' inside a 'Seal'\n        PARENTS                : { ShippingInstructionsNotification: {maxLength: 4096}, TransportDocumentNotification: {maxLength: 4096}, BookingNotification: {maxLength: 4096}, ArrivalNoticeNotification: {maxLength: 4096}, Seal: {enum: ['CAR', 'SHI', 'VET', 'CUS'] } },\n        DEFAULT                : { type: 'string' },\n    },\n    specialCertificateNumber: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 255 },\n    },\n    specversion: {\n        PARENTS                : DCSA_CLOUDEVENT_GROUP,\n        DEFAULT                : { type: 'string', enum: ['1.0'] },\n    },\n    stateRegion: {\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { address: {} } },\n        'BKG_v2.0.0-Beta-2'    : { DEFAULT: { nullable: true } },\n        PARENTS                : { Address:{}, address: {}, PartyAddress: {}, City: {} },\n        DEFAULT                : { type: 'string', maxLength: 65 },\n    },\n    statusCode: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { format: null } },\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'integer', format: 'int32' },\n    },\n    statusCodeMessage: {\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string', maxLength: 200 },\n    },\n    statusCodeText: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { maxLength: null } },\n        PARENTS                : { ErrorResponse: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    street: {\n        PARENTS                : { Address: {}, address: {}, PartyAddress: {} },\n        DEFAULT                : { type: 'string', maxLength: 70 },\n    },\n    streetNumber: {\n        PARENTS                : { Address: {}, address: {}, PartyAddress: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    subscriptionReference: {\n        PARENTS                : DCSA_CLOUDEVENT_GROUP,\n        DEFAULT                : { type: 'string', pattern: '^\\\\S(?:.*\\\\S)?$', maxLength: 100},\n    },\n    subsidiaryRisk1: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', minLength: 1, maxLength: 3, pattern: '^[0-9](\\\\.[0-9])?$' },\n    },\n    subsidiaryRisk2: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', minLength: 1, maxLength: 3, pattern: '^[0-9](\\\\.[0-9])?$' },\n    },\n    supplementaryDeclarantEORINumber: {\n        DEFAULT                : { type: 'string', pattern: '^\\\\S(?:.*\\\\S)?$', maxLength: 17 },\n    },\n    SupportingDocument: {\n        DEFAULT                : { type: 'object', title: 'Supporting Document', required: ['name', 'content'] },\n    },\n    supportingDocuments: {\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/DocumentMetadata'} },\n    },\n    SurrenderRequestAnswer: {\n        DEFAULT                : { type: 'object', title: 'Surrender Request Answer', required: ['surrenderRequestReference', 'action'] },\n    },\n    surrenderRequestCode: {\n        DEFAULT                : { type: 'string', enum: ['SREQ', 'AREQ'] },\n    },\n    SurrenderRequestDetails: {\n        DEFAULT                : { type: 'object', title: 'Surrender Request Details', required: ['surrenderRequestReference','transportDocumentReference','surrenderRequestedBy','surrenderRequestCode'] },\n    },\n    // SurrenderRequestedBy should be deleted\n    SurrenderRequestedBy: {\n        DEFAULT                : { type: 'object', title: 'Surrender Requested By', required: ['partyName', 'eblPlatform'] },\n    },\n    surrenderRequestReference: {\n        DEFAULT                : { type: 'string', maxLength: 100, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    tareWeight: {\n        PARENTS                : { Equipment: {}, RequestedEquipment: {}, RequestedEquipmentShipper: {}, RequiredEquipment: {} },\n        DEFAULT                : { $ref: '#/components/schemas/TareWeight' },\n    },\n    TareWeight: {\n        DEFAULT                : { type: 'object', title: 'Tare Weight', required: ['value','unit'], CHILDREN: ['value','unit'] },\n    },\n    tareWeightUnit: {\n        PARENTS                : { RequestedEquipment: {}, RequestedEquipmentShipper: {} },\n        DEFAULT                : { type: 'string', enum: ['KGM', 'LBR'] },\n    },\n    TaxLegalReference: {\n        DEFAULT                : { type: 'object', title: 'Tax & Legal Reference', required: ['type', 'countryCode', 'value'], CHILDREN: ['type','countryCode','value'] },\n    },\n    taxLegalReferences: {\n        PARENTS                : { BookingAgent: {}, Shipper: {}, ShipperHBL: {}, Consignee: {}, ConsigneeHBL: {}, Endorsee: {}, ServiceContractOwner: {}, Party: {}, IssuingParty: {}, IssueToParty: {}, TransactionParty: {}, SurrenderRequestedBy: {}, NotifyParty: {}, NotifyPartyHBL: {}, Seller: {}, Buyer: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/TaxLegalReference'} },\n    },\n    taxReference1: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 20 } },\n    },\n    taxReference2: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 20 } },\n    },\n    technicalName: {\n        PARENTS                : { DangerousGoods: {} },\n        DEFAULT                : { type: 'string', maxLength: 250 },\n    },\n    temperatureSetpoint: {\n        PARENTS                : { ActiveReeferSettings: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    temperatureUnit: {\n        PARENTS                : { ActiveReeferSettings: {}, Limits: {} },\n        DEFAULT                : { type: 'string', enum: ['CEL', 'FAH'] },\n    },\n    termsAndConditions: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', maxLength: 50000 },\n    },\n    time: {\n        PARENTS                : DCSA_CLOUDEVENT_GROUP,\n        DEFAULT                : { type: 'string', format: 'date-time'},\n    },\n    timestamp: {\n        PARENTS                : { Transaction: {} },\n        DEFAULT                : { type: 'integer', format: 'int64' },\n    },\n    Timestamp: {\n        DEFAULT                : { type: 'object', title: 'Timestamp', required: ['eventTypeCode', 'eventClassifierCode', 'eventDateTime'], CHILDREN: ['eventTypeCode','eventClassifierCode','eventDateTime'] },\n    },\n    timestampID: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', format: 'uuid' } },\n    },\n    timestamps: {\n        PARENTS                : { TransportCall: {}, Schedule: {} },\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/Timestamp'} },\n    },\n    TransactionParty: {\n        DEFAULT                : { type: 'object', title: 'Transaction Party', required: ['partyName', 'eblPlatform'] },\n    },\n    Transaction: {\n        DEFAULT                : { type: 'object', title: 'Transaction', required: ['action','actor','timestamp','recipient'], CHILDREN: ['action','actor','recipient','timestamp','reason','comments'] },\n    },\n    transactions: {\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/Transaction'} },\n    },\n    transitTime: {\n        DEFAULT                : { type: 'integer', format: 'int32' },\n    },\n    transport: {\n        PARENTS                : { Leg: {} },\n        DEFAULT                : { },\n    },\n    Transport: {\n        DEFAULT                : { type: 'object', title: 'Transport', required: ['transportPlanStage', 'transportPlanStageSequenceNumber', 'loadLocation', 'dischargeLocation', 'plannedDepartureDate', 'plannedArrivalDate'], CHILDREN: ['transportPlanStage','transportPlanStageSequenceNumber','loadLocation','dischargeLocation','plannedDepartureDate','plannedArrivalDate','modeOfTransport','vesselName','vesselIMONumber','carrierServiceCode','universalServiceReference','carrierImportVoyageNumber','universalImportVoyageReference','carrierExportVoyageNumber','universalExportVoyageReference'] },\n    },\n    TransportCall: {\n        DEFAULT                : { type: 'object', title: 'Transport Call', required: ['transportCallReference', 'carrierImportVoyageNumber', 'timestamps'], CHILDREN: ['portVisitReference','transportCallReference','carrierImportVoyageNumber','carrierExportVoyageNumber','universalImportVoyageReference','universalExportVoyageReference','cutOffTimes','location','timestamps'] },\n    },\n    transportCallID: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 100 }, PARENTS: { TransportCall: {} } },\n    },\n    transportCallReference: {\n        PARENTS                : { TransportCall: {}, VesselTransport: {}, BargeTransport: {} },\n        DEFAULT                : { type: 'string', maxLength: 100 },\n    },\n    TransportCallLocation: {\n        DEFAULT                : { type: 'object', title: 'TransportCall Location', CHILDREN: ['locationName','address','UNLocationCode','facilitySMDGCode'] },\n    },\n    transportCalls: {\n        PARENTS                : { VesselSchedule: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/TransportCall'} },\n    },\n    transportCallSequenceNumber: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { format: null } },\n        DEFAULT                : { type: 'integer', format: 'int32' },\n    },\n    transportControlTemperature: {\n        PARENTS                : { Limits: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    TransportDocument: {\n        'EBL_PINT_v3.0.0'    : { DEFAULT: { $ref: '#/components/schemas/TransportDocument' } },\n        DEFAULT                : { type: 'object', title: 'Transport Document', required: ['transportDocumentReference', 'transportDocumentStatus', 'transportDocumentTypeCode', 'isShippedOnBoardType', 'isElectronic', 'isToOrder', 'invoicePayableAt', 'partyContactDetails', 'documentParties', 'consignmentItems', 'utilizedTransportEquipments', 'termsAndConditions', 'receiptTypeAtOrigin', 'deliveryTypeAtDestination', 'cargoMovementTypeAtOrigin', 'cargoMovementTypeAtDestination', 'carrierCode', 'carrierCodeListProvider', 'transports'], CHILDREN: ['transportDocumentReference','shippingInstructionsReference','transportDocumentStatus','transportDocumentTypeCode','isShippedOnBoardType','freightPaymentTermCode','isElectronic','isToOrder','numberOfCopiesWithCharges','numberOfCopiesWithoutCharges','numberOfOriginalsWithCharges','numberOfOriginalsWithoutCharges','displayedNameForPlaceOfReceipt','displayedNameForPortOfLoad','displayedNameForPortOfDischarge','displayedNameForPlaceOfDelivery','shippedOnBoardDate','displayedShippedOnBoardReceivedForShipment','termsAndConditions','receiptTypeAtOrigin','deliveryTypeAtDestination','cargoMovementTypeAtOrigin','cargoMovementTypeAtDestination','issueDate','receivedForShipmentDate','serviceContractReference','contractQuotationReference','declaredValue','declaredValueCurrency','carrierCode','carrierCodeListProvider','carrierClauses','numberOfRiderPages','transports','charges','placeOfIssue','invoicePayableAt','partyContactDetails','documentParties','routingOfConsignmentCountries','consignmentItems','utilizedTransportEquipments','references','customsReferences'] },\n    },\n    transportDocument: {\n        DEFAULT                : { basedOn: 'TransportDocument' }\n    },\n    transportDocumentChecksum: {\n        DEFAULT                : { type: 'string', minLength: 64, maxLength: 64, pattern: '^[0-9a-f]+$' },\n    },\n    TransportDocumentRefStatus: {\n        DEFAULT                : { type: 'object', title: 'Transport Document Response', required: ['transportDocumentReference', 'transportDocumentStatus'] },\n    },\n    TransportDocumentNotification: {\n        'ebl_ntf_v3.0.0-Beta-1': { DEFAULT: { required: ['specversion', 'id', 'source', 'type', 'time', 'datacontenttype', 'data'] } },\n        DEFAULT                : { type: 'object', title: 'Transport Document Notification', required: ['specversion', 'id', 'source', 'type', 'time', 'datacontenttype', 'subscriptionReference', 'data'] },\n    },\n    transportDocumentReference: {\n        'ebl_ntf_v3.0.0-Beta-1': { DEFAULT: { pattern: \"^\\\\S+(\\\\s+\\\\S+)*$\" }, PARENTS: { data: {} } }, //BKG NTF 2.0.0 Beta 1\n        'EBL_NTF_v3.0.0-Beta-2': { PARENTS: { data: {} }},\n        'EBL_NTF_v3.0.0-Beta-3': { PARENTS: { data: {} }},\n        PARENTS                : { ShippingInstructions: {}, shippingInstructions: {}, updatedShippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, TransportDocument: {}, transportDocument: {}, TransportDocumentRefStatus: {}, IssuanceResponse: {}, SurrenderRequestAcknowledgement: {}, data: {}, SurrenderRequestDetails: {} },\n        DEFAULT                : { type: 'string', maxLength: 20, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    transportDocumentStatus: {\n        'ebl_ntf_v3.0.0-Beta-1': { PARENTS: { data: {} } },\n        'EBL_NTF_v3.0.0-Beta-2': { PARENTS: { data: {} } },\n        'EBL_NTF_v3.0.0-Beta-3': { PARENTS: { data: {} } },\n        PARENTS                : { TransportDocument: {}, transportDocument: {}, TransportDocumentRefStatus: {}, data: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    transportDocumentTypeCode: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, CreateShippingInstructions: {}, UpdateShippingInstructions: {}, ShippingInstructions: {}, updatedShippingInstructions: {}, shippingInstructions: {}, TransportDocument: {}, transportDocument: {} },\n        DEFAULT                : { type: 'string', enum: ['BOL', 'SWB'] },\n    },\n    transportEmergencyTemperature: {\n        PARENTS                : { Limits: {} },\n        DEFAULT                : { type: 'number', format: 'float' },\n    },\n    transportPlan: {\n        PARENTS                : { Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { type: 'array', items: {$ref: '#/components/schemas/Transport'} },\n    },\n    transportPlanStage: {\n        PARENTS                : { Transport: {} },\n        DEFAULT                : { type: 'string', enum: ['PRC', 'MNC', 'ONC'] },\n    },\n    transportPlanStageSequenceNumber: {\n        PARENTS                : { Transport: {} },\n        DEFAULT                : { type: 'integer', format: 'int32' },\n    },\n    transports: {\n        DEFAULT                : { $ref: '#/components/schemas/Transports' },\n    },\n    Transports: {\n        DEFAULT                : { type: 'object', title: 'Transports', required: ['plannedArrivalDate', 'plannedDepartureDate', 'portOfLoading', 'portOfDischarge', 'vesselVoyages'], CHILDREN: ['plannedArrivalDate','plannedDepartureDate','preCarriageBy','onCarriageBy','placeOfReceipt','portOfLoading','portOfDischarge','placeOfDelivery','onwardInlandRouting','vesselVoyages'] },\n    },\n    type: {\n        PARENTS                : { CustomsReference: {maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$'}, Reference: {maxLength: 3}, ReferenceConsignmentItem: {maxLength: 3}, ReferenceShipper: {maxLength: 3}, TaxLegalReference: {maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$'}, ArrivalNoticeNotification: {enum: ['org.dcsa.arrival-notice-notification.v1']}, BookingNotification: {enum: ['org.dcsa.booking.v2']},TransportDocumentNotification: {enum: ['org.dcsa.transport-document.v3']}, ShippingInstructionsNotification: {enum: ['org.dcsa.shipping-instructions.v3']}, vessel: {enum: ['GCGO', 'CONT', 'RORO', 'CARC', 'PASS', 'FERY', 'BULK', 'TANK', 'LGTK', 'ASSI', 'PILO'] }, NationalCommodityCode: {maxLength: 10, pattern: '^\\\\S(?:.*\\\\S)?$'} },\n        DEFAULT                : { type: 'string' },\n    },\n    typeOfPerson: {\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    unit: {\n        PARENTS                : { \n                                    CargoGrossWeight: {enum: ['KGM', 'LBR']},\n                                    CargoNetWeight: {enum: ['KGM', 'LBR']},\n                                    TareWeight: {enum: ['KGM', 'LBR']}, \n                                    CargoGrossVolume: {enum: ['MTQ', 'FTQ']}, \n                                    CargoNetVolume: {enum: ['MTQ', 'FTQ']}, \n                                    CargoGrossVolume: {enum: ['MTQ', 'FTQ']}, \n                                    NetVolume: {enum: ['MTQ', 'FTQ', 'LTR']}, \n                                    CargoNetVolume: {enum: ['MTQ', 'FTQ']}, \n                                    CargoGrossWeight: {enum: ['KGM', 'LBR']}, \n                                    GrossWeight: {enum: ['KGM', 'LBR']}, \n                                    CargoNetWeight: {enum: ['KGM', 'LBR']}, \n                                    NetWeight: {enum: ['KGM', 'LBR']}, \n                                    NetExplosiveContent: {enum: ['KGM', 'LBR', 'GRM', 'ONZ']} },\n        DEFAULT                : { type: 'string' },\n    },\n    units: {\n        PARENTS                : { ConfirmedEquipment: {}, RequestedEquipment: {}, RequestedEquipmentShipper: {} },\n        DEFAULT                : { type: 'integer', format: 'int32', minimum: 1 },\n    },\n    unitPrice: {\n        PARENTS                : { Charge: {} },\n        DEFAULT                : { type: 'number', format: 'float', minimum: 0 },\n    },\n    universalExportVoyageReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, Transport: {}, VesselVoyage: {}, Schedule: {}, TransportCall: {}, VesselTransport: {}, BargeTransport: {} },\n        DEFAULT                : { type: 'string', minLength: 5, maxLength: 5, pattern: '^\\\\d{2}[0-9A-Z]{2}[NEWSR]$' },\n    },\n    universalImportVoyageReference: {\n        PARENTS                : { Transport: {}, Schedule: {}, TransportCall: {}, VesselTransport: {}, BargeTransport: {} },\n        DEFAULT                : { type: 'string', minLength: 5, maxLength: 5, pattern: '^\\\\d{2}[0-9A-Z]{2}[NEWSR]$' },\n    },\n    universalServiceReference: {\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {}, Transport: {}, Schedule: {}, ServiceSchedule: {}, VesselTransport: {}, BargeTransport: {} },\n        DEFAULT                : { type: 'string', minLength: 8, maxLength: 8, pattern: '^SR\\\\d{5}[A-Z]$' },\n    },\n    UNLocationCode: {\n        'jit_v1.2.0-Beta-2'    : { pattern: null },\n        DEFAULT                : { type: 'string', minLength: 5, maxLength: 5, pattern: '^[A-Z]{2}[A-Z2-9]{3}$' },\n    },\n//    UNLocationLocation: {\n//        DEFAULT                : { type: 'object', title: 'UNLocation Location', additionalProperties: false, required: ['locationType', 'UNLocationCode'], CHILDREN: ['locationName','locationType','UNLocationCode'] },\n//    },\n    unNumber: {\n        DEFAULT                : { type: 'string', minLength: 4, maxLength: 4, pattern: '^\\\\d{4}$' },\n    },\n    UpdateBooking: {\n        DEFAULT                : { type: 'object', title: 'Update Booking', required: ['receiptTypeAtOrigin', 'deliveryTypeAtDestination', 'cargoMovementTypeAtOrigin', 'cargoMovementTypeAtDestination', 'isExportDeclarationRequired', 'isImportLicenseRequired', 'isEquipmentSubstitutionAllowed', 'shipmentLocations', 'requestedEquipments', 'documentParties'] },\n    },\n    UpdateShippingInstructions: {\n        DEFAULT                : { type: 'object', title: 'Update Shipping Instructions', required: ['shippingInstructionsReference', 'transportDocumentTypeCode', 'isShippedOnBoardType', 'isElectronic', 'isToOrder', 'freightPaymentTermCode', 'partyContactDetails', 'documentParties', 'consignmentItems', 'utilizedTransportEquipments'] },\n    },\n    updatedShippingInstructions: {\n        DEFAULT                : { title: 'Updated Shipping Instructions', basedOn: 'ShippingInstructions' },\n    },\n    updatedShippingInstructionsStatus: {\n        'ebl_ntf_v3.0.0-Beta-1'     : { PARENTS: { data: {}}},\n        'EBL_NTF_v3.0.0-Beta-2'     : { PARENTS: { data: {}}},\n        'EBL_NTF_v3.0.0-Beta-3'     : { PARENTS: { data: {}}},\n        PARENTS                : { ShippingInstructions: {}, shippingInstructions: {}, updatedShippingInstructions: {}, ShippingInstructionsRefStatus: {}, ShippingInstructionsRefCancelStatus: {}, data: {} },\n        DEFAULT                : { type: 'string', maxLength: 50 },\n    },\n    UTEquipment: {\n        DEFAULT                : { type: 'object', title: 'Shipper Owned Equipment (SoC)', required: ['isShipperOwned', 'equipment'], CHILDREN: ['isShipperOwned','equipment'] },\n    },\n    UTEquipmentReference: {\n        DEFAULT                : { type: 'object', title: 'Carrier Owned Equipment', required: ['isShipperOwned', 'equipmentReference'], CHILDREN:['isShipperOwned','equipmentReference'] },\n    },\n    UtilizedTransportEquipment: {\n        DEFAULT                : { type: 'object', title: 'Utilized Transport Equipment', required: ['equipment', 'isShipperOwned', 'seals'], CHILDREN: ['equipment','isShipperOwned','isNonOperatingReefer','activeReeferSettings','shippingMarks','seals','references','customsReferences'] },\n    },\n//  UtilizedTransportEquipmentCarrier: {\n//    DEFAULT                : { type: 'object', title: 'Utilized Transport Equipment (Carrier)', required: ['equipment', 'isShipperOwned', 'seals'], CHILDREN: ['equipment','isShipperOwned','isNonOperatingReefer','activeReeferSettings','seals','references','customsReferences'] },\n//  },\n    utilizedTransportEquipments: {\n        PARENTS                : { CreateShippingInstructions: {items: {$ref: '#/components/schemas/UtilizedTransportEquipmentShipper'}}, UpdateShippingInstructions: {items: {$ref: '#/components/schemas/UtilizedTransportEquipmentShipper'}}, ShippingInstructions: {items: {$ref: '#/components/schemas/UtilizedTransportEquipmentShipper'}}, shippingInstructions: {items: {$ref: '#/components/schemas/UtilizedTransportEquipmentShipper'}}, updatedShippingInstructions: {items: {$ref: '#/components/schemas/UtilizedTransportEquipmentShipper'}}, TransportDocument: {items: {$ref: '#/components/schemas/UtilizedTransportEquipment'} }, transportDocument: { items: {$ref: '#/components/schemas/UtilizedTransportEquipment'} } },\n        DEFAULT                : { type: 'array', minItems: 1 },\n    },\n    UtilizedTransportEquipmentShipper: {\n        DEFAULT                : { type: 'object', title: 'Utilized Transport Equipment (Shipper)', required: ['seals'], oneOf: true, CHILDREN: ['shippingMarks','seals','references','customsReferences']},\n    },\n    value: {\n        PARENTS                : {\n                                    TareWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoGrossVolume: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoGrossVolume: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoNetVolume: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoNetVolume: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true},\n                                    NetVolume: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true},\n                                    CargoGrossWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoNetWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoGrossWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    GrossWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    CargoNetWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    NetWeight: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    NetExplosiveContent: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, \n                                    DetailedError: {type: 'string', maxLength: 500},\n                                    errors: {type: 'string', maxLength: 500}, \n                                    TaxLegalReference: {type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$'}, \n                                    Reference: {type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$'},\n                                    ReferenceShipper: {type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$'}, \n                                 },\n    },\n    values: {\n        PARENTS                : { \n                                    NationalCommodityCode: {}, \n                                    CustomsReference: { items: {type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n                                    ReferenceConsignmentItem: { items: {type: 'string', maxLength: 35, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n                                 },\n        DEFAULT                : { type: 'array', minItems: 1, items: {type: 'string', maxLength: 10, pattern: '^\\\\S(?:.*\\\\S)?$' } },\n    },\n    vessel: {\n        'CS_v1.0.0'             : { DEFAULT: { type: null, title: null, required: null, CHILDREN: null, $ref: '#/components/schemas/Vessel' } },\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { title: null, required: null }, PARENTS: { timestamp: {}, TransportCall: {} } },\n        PARENTS                : { CreateBooking: {}, UpdateBooking: {}, Booking: {}, booking: {}, amendedBooking: {} },\n        DEFAULT                : { $ref: '#/components/schemas/Vessel' },\n    },\n    Vessel: {\n        'BKG_v2.0.0'           : { DEFAULT: { type: 'object', title: 'Vessel', required: ['name'], CHILDREN: ['name','vesselIMONumber'] } },\n        DEFAULT                : { type: 'object', title: 'Vessel', CHILDREN: ['vesselIMONumber','MMSINumber','name','flag','callSign','operatorCarrierCode','operatorCarrierCodeListProvider'] },\n    },\n    vesselCallSign: {\n        PARENTS                : {  VesselSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 10, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    vesselCallSignNumber: {\n        'jit_v1.2.0-Beta-2'    : { PARENTS: { vessel: {} } },\n        PARENTS                : { VesselSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 10 },\n    },\n    vesselDraft: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'number', format: 'float' }, PARENTS: { OperationsEvent: {} } },\n    },\n    vesselDraftUnit: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', enum: ['MTR', 'FOT'] }, PARENTS: { OperationsEvent: {} } },\n    },\n    vesselFlag: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { type: 'string', maxLength: 2 }, PARENTS: { vessel: {} } },\n    },\n    vesselIMONumber: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { minLength: 7, maxLength: 8, pattern: null }, PARENTS: { timestamp: {deprecated: true}, vessel: {} }},\n        PARENTS                : { vessel: {}, Vessel: {}, Transport: {}, VesselVoyage: {}, Barge: {} },\n        DEFAULT                : { type: 'string', minLength: 7, maxLength: 8, pattern: '^\\\\d{7,8}$' },\n    },\n    vesselName: {\n        'jit_v1.2.0-Beta-2'    : { DEFAULT: { maxLength: 35, pattern: null }, PARENTS: { vessel: {} } },\n        PARENTS                : { Transport: {}, VesselVoyage: {}, VesselSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 50, pattern: '^\\\\S(?:.*\\\\S)?$' },\n    },\n    vesselOperatorCarrierCode: {\n        PARENTS                : { vessel: {nullable: false}, Schedule: {}, VesselSchedule: {} },\n        DEFAULT                : { type: 'string', maxLength: 10 },\n    },\n    vesselOperatorCarrierCodeListProvider: {\n        PARENTS                : { vessel: {nullable: false}, Schedule: {}, VesselSchedule: {} },\n        DEFAULT                : { type: 'string', enum: ['SMDG', 'NMFTA'] },\n    },\n    vesselPosition: {\n        'jit_v1.2.0-Beta-2'    : { $ref: true },\n    },\n    VesselSchedule: {\n        DEFAULT                : { type: 'object', title: 'Vessel Schedule', required: ['isDummyVessel'], CHILDREN: ['vessel','isDummyVessel','transportCalls'] },\n    },\n    vesselSchedules: {\n        PARENTS                : { ServiceSchedule: { minItems: 1, items: {$ref: '#/components/schemas/VesselSchedule'} }, PortSchedule: { items: { $ref: '#/components/schemas/Schedule' } } },\n        DEFAULT                : { type: 'array' },\n    },\n    VesselTransport: {\n        DEFAULT                : { type: 'object', title: 'Vessel Transport', required: ['modeOfTransport'], CHILDREN: ['modeOfTransport','portVisitReference','transportCallReference','servicePartners','universalServiceReference','universalExportVoyageReference','universalImportVoyageReference','vessel'] },\n    },\n    VesselVoyage: {\n        DEFAULT                : { type: 'object', title: 'Vessel/Voyage', required: ['vesselName', 'carrierExportVoyageNumber'], CHILDREN: ['vesselName','carrierExportVoyageNumber','universalExportVoyageReference'] },\n    },\n    vesselVoyages: {\n        DEFAULT                : { type: 'array', minItems: 1, items: {$ref: '#/components/schemas/VesselVoyage'} },\n    },\n    //volume: {\n    //    PARENTS                : { CargoItemCarrier: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, CargoItemShipper: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true}, CargoItem: {type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true} },\n    //},\n    //volumeUnit: {\n    //    PARENTS                : { CargoItemCarrier: {}, CargoItemShipper: {}, CargoItem: {} },\n    //    DEFAULT                : { type: 'string', enum: ['MTQ', 'FTQ'] },\n    //},\n    //weight: {\n    //    PARENTS                : { CargoItemCarrier: {}, CargoItemShipper: {}, CargoItem: {} },\n    //    DEFAULT                : { type: 'number', format: 'float', minimum: 0, exclusiveMinimum: true },\n    //},\n    weightUnit: {\n        PARENTS                : { Equipment: {}, RequiredEquipment: {} },\n        DEFAULT                : { type: 'string', enum: ['KGM', 'LBR'] },\n    },\n    width: {\n        PARENTS                : { vessel: {} },\n        'jit_v1.2.0-Beta-2'    : { type: 'number', format: 'float' },\n    },\n    woodDeclaration: {\n        PARENTS                : { OuterPackaging: {}, OuterPackagingShipper: {} },\n        DEFAULT                : { type: 'string', maxLength: 30 },\n    },\n};\n\n\n// Makes sure two arrays are equal if:\n// * they are the same array\n// * they have the same size\n// * items on each position in the list are the same\nfunction arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\n// input:         the property (Node) in the API to validate\n// propertyName:  the name of the property being tested (can be a simpleType or an object)\n// attribute:     the attribute to test (type, minLength, required, etc...) if specified correctly\n// requirements:  the list of attributes that from the Spectral rule that is valid\n// results:       an accumulated list of errors for a particular property\nfunction checkRequirement(input, propertyName, attribute, requirements, results) {\n    // Checking 'enum' attribute\n    if (attribute === 'enum') {\n        // Check that enum values match (= are specified the same way...)\n        const enumValuesRequired = requirements[attribute];\n        const enumValues = input[attribute];\n        if (!arraysEqual(enumValues, enumValuesRequired)) {\n            // The two enum lists do not match - file an error\n            results.push( { message: propertyName + `.` + attribute + ` value must equal: [` + enumValuesRequired + `], value provided: [` + enumValues + `]`, }, );\n        }\n        // Checking 'required' attribute\n    } else if (attribute === 'required') {\n        // Check that required lists match (= are specified the same way...)\n        const requiredValues = requirements[attribute];\n        const inputValues = input[attribute];\n        if (!arraysEqual(inputValues, requiredValues)) {\n            // The two required lists do not match - file an error\n            results.push( { message: propertyName + `.` + attribute + ` value must equal: [` + requiredValues + `], value provided: [` + inputValues + `]`, }, );\n        }\n        // Checking 'items' attribute\n    } else if (attribute === 'items') {\n        if (input['items'] && requirements['items']) {\n            // Check if a $ref MUST be used\n            if (Object.keys(input['items']).length === 1 && input['items']['$ref']) {\n                // the input contains a $ref\n                if (requirements['items']['$ref'] !== input['items']['$ref']) {\n                    results.push( { message: propertyName + `.` + attribute + ` is defined as a $ref pointing to '` + input['items']['$ref'] + `' - but must be defined ` + (requirements['items']['$ref'] ? `as a $ref pointing to: ` + requirements['items']['$ref'] : `inline`), }, );\n                }\n            } else if (Object.keys(requirements['items']).length === 1 && requirements['items']['$ref']) {\n                // the spec requires a $ref\n                if (input['items']['$ref'] !== requirements['items']['$ref']) {\n                    results.push( { message: propertyName + `.` + attribute + ` is not defined as a $ref and MUST point to: ` + requirements['items']['$ref'], }, );\n                }\n            } else {\n                // Multiple properties defined for an inline defined items\n                for (const attribute2 of ATTRIBUTES_TO_CHECK) {\n                    checkRequirement(input.items, propertyName + '.items', attribute2, requirements.items, results)\n                }\n            }\n        } else {\n            if (input['items']) {\n                // input.items is defined - but it is not part of the required properties\n                results.push( { message: propertyName + `.` + attribute + ` value defined but shouldn't be according to the rules`, }, );\n            } else if (requirements['items']) {\n                // requirements.items is defined - but it is not part of the input properties\n                results.push( { message: propertyName + `.` + attribute + ` value is missing - MUST be defined`, }, );\n            }\n        }\n        // Checking a specific attribute\n    } else if (requirements[attribute] !== input[attribute]) {\n        // The value provided and the value required does not match - file an error\n        results.push( { message: propertyName + `.` + attribute + ` value must equal: ` + requirements[attribute] + `, value provided: ` + input[attribute], }, );\n    }\n\n    // Make sure type attributes that are strings have example attribute value set\n    if (attribute === 'type' && requirements[attribute] === \"string\" && (!input['example'] || input['example'].length === 0)) {\n        // Example value missing when type=string - file an error\n        results.push( { message: propertyName + `.example attribute must be set with a value`, }, );\n    }\n}\n\n// spec:          the accumulated spec to validate against in all uses of a property\n// propertyName:  the name of the property being tested (can be a simpleType or an object)\n// input:         the property (Node) in the API to validate\n// results:       an accumulated list of errors for a particular property\nfunction checkAttributeRequirements(spec, propertyName, input, results) {\n    // Test valid $ref specifications\n    if (input && Object.keys(input).length === 1 && input['$ref']) {\n        // Make sure correct use of $ref is used\n        if (spec && spec['$ref']) {\n            if (spec['$ref'] !== input['$ref']) {\n                results.push({ message: propertyName + ` - if not defined inline it MUST use a $ref pointing to: ` + spec['$ref'] + ` (currently pointing to: ` + input['$ref'] +`)`, }, );\n            }\n        } else {\n            // The attribute exists only in the API - NOT as a Spectral rule - file an error\n            results.push( { message: propertyName + `.$ref is specified - but should be removed as it is not a required attribute`, }, );\n        }\n        // Don't validate anything else - if specified using a $ref - it must match and nothing else\n        return;\n    }\n\n    // Run through all properties to check\n    for (const attribute of ATTRIBUTES_TO_CHECK) {\n        // Check if the property is used in the API\n        if (input && input[attribute]) {\n            // ...and check if it also exists in the spec\n            if (spec && spec[attribute]) {\n                checkRequirement(input, propertyName, attribute, spec, results);\n            } else {\n                // The attribute exists only in the API - NOT in the spec - file an error\n                results.push( { message: propertyName + `.` + attribute + ` is specified - but should be removed as it is not a required attribute`, }, );\n            }\n        } else if (spec && spec[attribute]) {\n            // The attribute exists in the spec - NOT in the API\n            if (attribute === 'enum' || attribute === 'required') {\n                // Provide better error message for missing enum\n                results.push( { message: propertyName + `.` + attribute + ` must contain the list: [` + spec[attribute] + `] but nothing was provided`, }, );\n            } else {\n                results.push( { message: propertyName + `.` + attribute + ` value must equal: ` + spec[attribute] + ` but nothing was provided`, }, );\n            }\n        } else {\n            // In none of the lists - there is no requirement for this attribute\n        }\n    }\n\n    if (input && input['type'] && input['type'] === 'object' && spec['CHILDREN']) {\n//    if (input.properties && !arraysEqual(Object.keys(input.properties), spec['CHILDREN'])) {\n        if (input.properties && !arraysEqual(Array.from(Object.keys(input.properties)), spec['CHILDREN'])) {\n            // The two enum lists do not match - file an error\n            results.push( { message: propertyName + ` MUST have the following children: [` + spec['CHILDREN'] + `], value provided: [` + Object.keys(input.properties) + `]`, }, );\n        }\n        //  results.push( { message: propertyName + ` looking for children: ` + JSON.stringify(Object.keys(input.properties)) + spec['CHILDREN'], }, );\n    }\n}\n\n// specA:          the accumulated spec for the property\n// specB:          the spec to merge into the accumulated spec. Null removes a property, otherwise it will be added or updated\n// includeParentProperty: weather to use this method to also copy the PARENTS property\nfunction mergeSpecs(specA, specB, includeParentProperty) {\n    // Make sure specB exists\n    if (specB) {\n        // Run through all elements in specB\n        for (const [key, value] of Object.entries(specB)) {\n            // If value of key in specB is null\n            if (!value) {\n                // ...and it exists in specA\n                specA[key] = undefined;\n//        if (specA[key]) {\n//          // ...then delete the key in specA!\n//          //delete specA[key];\n//        }\n                // If the key already exists in specA\n            } else if (includeParentProperty || key !== 'PARENTS') {\n                // ...then update or add the value in specA\n                specA[key] = value;\n            }\n        }\n    }\n}\n\n// spec:          the spec as defined for the current location\n// parentSpec:    the spec as defined for the specific parent node\n// context:       a StopLight object containing metadata about the API property being tested\n// index:         the parent index of the context.path currently being checked\n// results:       an accumulated list of errors for a particular property\n// returns true if location is matched - false if the property is not allowed\nfunction checkParent(spec, parentSpec, context, index, results) {\n    // Check if parentSpec is defined\n    if (parentSpec) {\n        // Find the index of the parentName\n        const newIndex = ((context.path.length > (3 + index)) && (context.path[context.path.length - (3 + index)] === 'items')) ?\n            (4 + index) : (3 + index);\n        // Get the parentName\n        const parentPropertyName = context.path[context.path.length - newIndex];\n        // Check if the parent spec has defined something for the parentName\n        if (parentSpec[parentPropertyName]) {\n            // ...if so - merge the spec of the parentSpec with the accumulated spec (excluding PARENTS property)\n            mergeSpecs(spec, parentSpec[parentPropertyName], false);\n            // ...and recursively check next parent\n            return checkParent(spec, parentSpec[parentPropertyName]['PARENTS'], context, newIndex, results);\n        } else {\n            // Check if we are in a oneOf situation\n            if (/^[0-9]+$/.test(parentPropertyName) && (context.path.length > (newIndex + 2)) && parentSpec[context.path[context.path.length - (newIndex + 2)]]) {\n                mergeSpecs(spec, parentSpec[context.path[context.path.length - (newIndex + 2)]], false);\n                return checkParent(spec, parentSpec[context.path[context.path.length - (newIndex + 2)]]['PARENTS'], context, newIndex + 2, results);\n            } else {\n                // If the parentName does not exist in the parentSpec - then the property is not allowed in that particular position\n                results.push( { message: context.path[context.path.length - 1] + ` is only allowed under one of these parents: [` + Object.keys(parentSpec) + `] - was found under: ` + parentPropertyName, }, );\n                return false;\n            }\n        }\n    } else {\n        return true;\n    }\n}\n\n// property:      the Spectral spec to validate against\n// standard:      the name of the OAS file (without \".yaml\"-extension)\n// propertyName:  the name of the property being tested (can be a simpleType or an object)\n// input:         the property (Node) in the API to validate\n// context:       a StopLight object containing metadata about the API property being tested\n// specs:         the specs to test against\n//\nfunction checkStandard(property, standard, propertyName, input, context, specs, results) {\n    // Gather all errors in results\n//    const results = [];\n\n//    let specs = {};\n    if (property['DEFAULT'] && property['DEFAULT'].basedOn) {\n        const basedOnPropertyName = property['DEFAULT'].basedOn;\n        checkStandard(DCSA_PROPERTIES[basedOnPropertyName], standard, basedOnPropertyName, input, context, specs, results);\n    }\n    mergeSpecs(specs, property['DEFAULT'], false);\n\n    // Merge with standard specific specs (if any)\n    const standardProperty = property[standard];\n    if (standardProperty) {\n        mergeSpecs(specs, standardProperty['DEFAULT'], false);\n    }\n\n    // Check if parent requirements should be checked\n    if (!NO_PARENT_CHECK.has(standard)) {\n        let parentSpecs = {};\n        if (standardProperty) {\n            // Use the PARENTS from the standard\n            mergeSpecs(parentSpecs, standardProperty['PARENTS'], true);\n//      if (propertyName === 'documentParties') {\n//        results.push( { message: `**** parentSpecs: [` + Object.keys(parentSpecs) + `]`, }, );\n//      }\n        } else {\n            // Use the PARENTS from the default\n            mergeSpecs(parentSpecs, property['PARENTS'], true);\n        }\n\n        // Only merge a possible parent requirement if one has been defined\n        if (!isEmptyObject(parentSpecs)) {\n            let resultingParentSpecs = {};\n            if (checkParent(resultingParentSpecs, parentSpecs, context, 0, results)) {\n                mergeSpecs(specs, resultingParentSpecs)\n            }\n        }\n    }\n}\n\nfunction isEmpty(obj) {\n    for (const prop in obj) {\n        if (Object.hasOwn(obj, prop)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isEmptyObject(value) {\n    if (value == null) {\n        // null or undefined\n        return false;\n    }\n\n    if (typeof value !== 'object') {\n        // boolean, number, string, function, etc.\n        return false;\n    }\n\n    const proto = Object.getPrototypeOf(value);\n\n    // consider `Object.create(null)`, commonly used as a safe map\n    // before `Map` support, an empty object as well as `{}`\n    if (proto !== null && proto !== Object.prototype) {\n        return false;\n    }\n\n    return isEmpty(value);\n}\n\nexport default createRulesetFunction(\n    {\n        input: null,\n        options: null,\n    },\n    function checkRequirements(input, options, context) {\n        // Get propertyName to check based on the path in the Context\n        const propertyName = context.path[context.path.length - 1];\n\n        // Get the Standard being tested (this excludes the '.yaml' e.g.: jit_v1.2.0-Beta-2)\n        const standard = context['document']['source'].substring(context['document']['source'].lastIndexOf('/') + 1, context['document']['source'].length - 5);\n\n        // Check if the standard is in the list of standards that is currently covered by Spectral\n        if (COVERED_STANDARDS.has(standard)) {\n            // Get the property in the list of DCSA_PROPERTIES\n            const property = DCSA_PROPERTIES[propertyName];\n            if (property) {\n                // Gather all errors in results\n                const results = [];\n                // Gather the specs to check against\n                let specs = {};\n                checkStandard(property, standard, propertyName, input, context, specs, results);\n                //results.push( { message: propertyName + ` specs: [` + Object.keys(specs) + `]`, }, );\n\n                // Specs is now correct in regard to specification and location\n                checkAttributeRequirements(specs, propertyName, input, results);\n\n                // Only return a list if it contains something - StopLight requirement!!\n                if (results.length > 0) {\n                    return results;\n                }\n            } else {\n                // the property name not part of DCSA_PROPERTIES\n                if (ERROR_ON_UNSUPPORTED_PROPERTIES) {\n                    return [ { message: propertyName + ` is not in the list of DCSA supported property names`, }, ];\n                }\n            }\n        }\n    }\n);"
    }
  ],
  "extendedDefault": false
}