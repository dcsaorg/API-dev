{
  "name": "DCSA-OpenAPI",
  "description": "",
  "spectralExtends": [],
  "extends": [],
  "formats": [
    "oas2",
    "oas3",
    "oas3.0",
    "oas3.1"
  ],
  "aliases": {
    "EquipmentReference": {
      "id": "yQMpuqzgEBvr-SRsXhmoz",
      "description": "Matching all `equipmentReference`",
      "name": "EquipmentReference",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$..equipmentReference"
        }
      ]
    },
    "Weight": {
      "id": "0env3umt4HdP-z6VKh3mM",
      "description": "Matching all `weight`",
      "name": "Weight",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$..weight"
        }
      ]
    },
    "WeightUnit": {
      "id": "7quFNH8eevkKEThM73X4g",
      "description": "Matching all `weightUnit`",
      "name": "WeightUnit",
      "targets": [
        {
          "formats": [
            "oas3"
          ],
          "given": "$..weightUnit"
        }
      ]
    }
  },
  "rules": {
    "simpleType-validation-EquipmentReference-type": {
      "id": "Cx3jVcBhdiDjS7h_VTWxg",
      "given": [
        "#EquipmentReference"
      ],
      "severity": "error",
      "then": [
        {
          "function": "truthy",
          "field": "type"
        },
        {
          "function": "equals",
          "functionOptions": {
            "value": "string"
          },
          "field": "type"
        }
      ],
      "name": "simpleType-validation-EquipmentReference-type",
      "description": "The `equipmentReference` **MUST** be a `string` type",
      "message": "EquipmentReference {{error}}"
    },
    "simpleType-validation-EquipmentReference-maxlength": {
      "id": "C-kCTrX8UL3xsP3NSxQZN",
      "given": [
        "#EquipmentReference"
      ],
      "severity": "error",
      "then": [
        {
          "function": "equals",
          "functionOptions": {
            "value": 11
          },
          "field": "maxLength"
        },
        {
          "function": "truthy",
          "field": "maxLength"
        }
      ],
      "name": "simpleType-validation-EquipmentReference-maxlength",
      "description": "The `equipmentReference` **MUST** be maxLength of `11`",
      "message": "EquipmentReference {{error}}"
    },
    "simpleType-validation-Weight-exclusiveMinimum": {
      "id": "ndnY3xO3aXLqzs7ZIK9yG",
      "given": [
        "#Weight"
      ],
      "severity": "error",
      "then": {
        "function": "truthy",
        "field": "exclusiveMinimum"
      },
      "name": "simpleType-validation-Weight-exclusiveMinimum",
      "description": "The `weight` **MUST** have exclusiveMinimum set to `true`",
      "message": "Weight {{error}}"
    },
    "simpleType-validation-Weight-type": {
      "id": "vj2-Vt_ecIimNmpG0jUus",
      "given": [
        "#Weight"
      ],
      "severity": "error",
      "then": [
        {
          "function": "truthy",
          "field": "type"
        },
        {
          "function": "equals",
          "functionOptions": {
            "value": "number"
          },
          "field": "type"
        }
      ],
      "name": "simpleType-validation-Weight-type",
      "description": "The `weight` **MUST** be a `number` type",
      "message": "Weight {{error}}"
    },
    "simpleType-validation-Weight-format": {
      "id": "FC33fVhF2N61VeCkHhuA1",
      "given": [
        "#Weight"
      ],
      "severity": "error",
      "then": [
        {
          "function": "truthy",
          "field": "format"
        },
        {
          "function": "equals",
          "functionOptions": {
            "value": "float"
          },
          "field": "format"
        }
      ],
      "name": "simpleType-validation-Weight-format",
      "description": "The `weight` **MUST** be a `float` format",
      "message": "Weight {{error}}"
    },
    "simpleType-validation-WeightUnit-No-$ref-linking": {
      "id": "Aywop5FnDTDVPSy7-pTQ1",
      "given": [
        "#WeightUnit"
      ],
      "severity": "error",
      "then": {
        "function": "noRefInSimpleType"
      },
      "name": "simpleType-validation-WeightUnit-No-$ref-linking",
      "description": "The `weightUnit` **MUST** not be defined using `$ref`",
      "message": "WeightUnit {{error}}"
    },
    "simpleType-validation-Weight-minimum": {
      "id": "24c4DWeDGHWxyjFmLdiG2",
      "given": [
        "#Weight"
      ],
      "severity": "error",
      "then": {
        "function": "falsy",
        "field": "minimum"
      },
      "name": "simpleType-validation-Weight-minimum",
      "description": "The `weight` **MUST** have a minimum value of `0`",
      "message": "Weight MUST have a minimum value of 0"
    }
  },
  "x-embeddedFunctions": [
    {
      "id": "Y9n6wjWj_-QxlX7wxuZff",
      "extendedFrom": "",
      "name": "noRefInSimpleType",
      "content": "import { createRulesetFunction } from '@stoplight/spectral-core';\n\nexport default createRulesetFunction(\n  {\n    input: null,\n    options: null,\n  },\n  // https://github.com/stoplightio/spectral/blob/develop/docs/guides/5-custom-functions.md#writing-functions\n  function noRefInSimpleType(input, options, context) {\n    if (true) {\n      return [\n        {\n          message: ` - MUST not be defined using a $ref.`,\n        },\n      ];\n    }\n  }\n);"
    },
    {
      "id": "SaCdkhp-SlvEX5829USLQ",
      "extendedFrom": "",
      "name": "equals",
      "content": "import { createRulesetFunction } from '@stoplight/spectral-core';\n\nexport default createRulesetFunction(\n  {\n    input: null,\n    options: {\n      type: \"object\",\n      additionalProperties: false,\n      required: [\"value\"],\n\n      properties: {\n        value: {\n          type: [\"string\", \"integer\"]\n        }\n      }\n    },\n  },\n  // https://github.com/stoplightio/spectral/blob/develop/docs/guides/5-custom-functions.md#writing-functions\n  function equals(input, options, context) {\n    const { value } = options;\n\n    if (input !== value) {\n      return [\n        {\n          message: ` - value must equal \"${value}\", value provided: \"${input}\".`,\n        },\n      ];\n    }\n  },\n);"
    }
  ],
  "extendedDefault": false
}