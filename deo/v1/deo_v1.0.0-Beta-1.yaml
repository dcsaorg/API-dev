openapi: 3.0.3
info:
  version: 1.0.0-Beta-1
  title: DCSA OpenAPI specification for Delivery Order v1 - Beta 1
  description: |
    API specification issued by DCSA.org.
    
    For explanation to specific values or objects please refer to the [Information Model 2023.Q2](https://dcsa.org/wp-content/uploads/2022/12/DCSA_Information-Model-2022.Q4-final.pdf) *** _Link will be updated when new IM is published_ ***. The [DEO IFS]() *** _Link will be updated when IFS is published_ *** should be consulted.

    It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint
    - /v1/events
    
    in order to poll event information.

    It is recomended to implement the [DCSA Documentation Event Hub](https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB) in order to use the push model. Here events are pushed as they occur.

    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/deo/v1#v100B1). If you have any questions, feel free to [Contact Us](https://dcsa.org/get-involved/contact-us).

  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
tags:
  - name: Delivery Order
    description: |
      The Delivery Order object for the Shipper
  - name: Delivery Order Events
    description: |
      If no subscriptions have been setup, event polling can be done here
paths:
  /v1/delivery-order/{deliveryOrderReference}:
    get:
      tags:
       - Delivery Order
      summary: Get Delivery Order
      description: |
        Retrieves the Delivery Order with the `deliveryOrderReference` in the path.
      parameters:
        - $ref: '#/components/parameters/deliveryOrderReferencePathParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Request successful
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/3.0.0#/components/schemas/deliveryOrder'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/2.0.0#/components/schemas/error'
    patch:
      tags:
       - Delivery Order
      summary: Confirm or Reject a Delivery Order.
      description: |
        Confirm or Reject a Delivery Order.
      parameters:
        - $ref: '#/components/parameters/deliveryOrderReferencePathParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/parameters/Api-Version-Major'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  properties:
                    documentStatus:
                      type: string
                      description: |
                        This changes the documentStatus to contain the value:
                        - CONF (Confirmed)
                        - REJE (Rejected)
                      enum:
                        - CONF
                        - REJE
                      example:
                        CONF
              required:
                - documentStatus
      responses:
        '200':
          description: The Transport Document
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/3.0.0#/components/schemas/deliveryOrderRefStatus'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/2.0.0#/components/schemas/error'

  /v1/events/:
    get:
      tags:
       - Delivery Order Events
      summary: Get Shipment events
      description: |
        Retrieves **Delivery Order** related `Shipmentevents`. This means it will only return `Shipmentevents` that have 
        
            documentTypeCode=DEO

        If not specified - this list will be sorted by the time the `ShipmentEvent` was created (eventCreatedDateTime) in ascending (ASC) order.
      parameters:
        # Chunk with specialized booking related ShipmentEvent parameters
        - $ref: '#/components/parameters/shipmentEventTypeCodes'
        - $ref: '#/components/parameters/documentReference'
        
        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/parameters/carrierBookingReference'

        # Chunk with base event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/parameters/eventCreatedDateTime'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/parameters/eventDateTime'

        # Chunk with Global related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/parameters/sort'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Request successful
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deliveryOrderShipmentEvent'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/2.0.0#/components/schemas/error'

components:
  schemas:
    deliveryOrderShipmentEvent:
      type: object
      description: |
        The `ShipmentEvent` is used to communicate Delivery Order.
      allOf:
        - type: object
          properties:
            metadata:
              description: |
                The `metadata` of the `ShipmentEvent` - includes all non-business related attributes
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/metadata'
                  #Adding eventType property to the metadata object
                - type: object
                  properties:
                    eventType:
                      description: |
                        The type of the Event - in case of a `ShipmentEvent` it must be `SHIPMENT`
                      enum:
                        - SHIPMENT
                      example: SHIPMENT
        - type: object
          properties:
            payload:
              description: |
                The business attributes related to the `ShipmentEvent` and specially in relation to Delivery Order.
                
                This is a conditional object - if `retractedEventID` is **not** provided in the `metadata` then this object is mandatory
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/baseEvent'
                #Overriding this property to have correct payload response examples
                - type: object
                  properties:
                    eventDateTime:
                      description: |
                        The local date and time, when the event took place, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Often this is the same as eventCreatedDateTime (which is when the event is created)
                #Overriding this property to have correct payload response examples
                - type: object
                  properties:
                    eventClassifierCode:
                      description: |
                        For `ShipmentEvents` the `eventClassifierCode` **must** be `ACT`
                      enum:
                        - ACT
                      example: ACT
                - type: object
                  properties:
                    shipmentEventTypeCode:
                      allOf:
                        - $ref: '#/components/schemas/shipmentEventTypeCode'
                - type: object
                  properties:
                    documentTypeCode:
                      allOf:
                        - $ref: '#/components/schemas/documentTypeCode'
                - type: object
                  properties:
                    documentReference:
                      allOf:
                        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/documentReference'
                - type: object
                  properties:
                    reason:
                      allOf:
                        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/reason'
                - type: object
                  properties:
                    relatedDocumentReferences:
                      allOf:
                        - $ref: '#/components/schemas/relatedDocumentReferences'
                - type: object
                  properties:
                    references:
                      allOf:
                        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/references'
              required:
                - shipmentEventTypeCode
                - documentTypeCode
                - documentReference
      required:
        - metadata
    relatedDocumentReferences:
      type: array
      description: |
        An optional list of key-value (`type`-`value`) pairs representing links to objects relevant to the event. The `type`-field is used to describe where the `value`-field is pointing to.
      example:
        - type: 'BKG'
          value: 'ABC123059'
        - type: 'TRD'
          value: '85943567'
      items:
        type: object
        properties:
          type:
            type: string
            description: |
              The `type` is used to identify the type of information `value` points to. For this DEO API it can only be one of the following values
              - CBR (Carrier Booking Request)
              - BKG (Booking)
              - SHI (Shipping Instruction)
              - TRD (Transport Document)

              More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/documenttypecodes.csv) (be aware that the above list is **only** a subset of the values)
            example: SHI
            enum:
              - CBR
              - BKG
              - SHI
              - TRD
          value:
            type: string
            maxLength: 100
            description: |
              The reference to the object described by `type`
            example: '123e4567e89b'

    documentTypeCode:
      type: string
      description: |
        The documentTypeCode is used to identify the type of information documentReference points to. For the Delivery Order API - this can only be DEO (Delivery Order)
      enum:
        - DEO
      example: DEO
    shipmentEventTypeCode:
      type: string
      description: |
        The status of the Delivery Order can be
        - `RECE` (Received)
        - `PENC` (Pending Confirmation)
        - `CONF` (Confirmed)
        - `REJE` (Rejected)
        - `CANC` (Cancelled)
      enum:
        - RECE
        - PENC
        - CONF
        - REJE
        - CANC
      example: CONF

  parameters:
  
    #############
    # Path params
    #############
    
    deliveryOrderReferencePathParam:
      in: path
      name: deliveryOrderReference
      description: |
        The `deliveryOrderReference` of the Delivery Order to match
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryOrderReference'
      required: true

    ##############
    # Query params
    ##############

    documentReference:
      in: query
      name: documentReference
      description: |
        Filter on the `documentReference`. The `documentReference` refers to the `deliveryOrderReference`
        
        Specifying this filter will only return `ShipmentEvents` related to this particular `deliveryOrderReference`.
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.1.0#/components/schemas/documentReference'
      example: '<the-reference-of-the-delivery-order>'
    shipmentEventTypeCodes:
      in: query
      name: shipmentEventTypeCode
      explode: false
      style: form
      description: |
        The status of the document in the booking process to filter by. Possible values are
        - RECE (Received)
        - PENC (Pending Confirmation)
        - CONF (Confirmed)
        - REJE (Rejected)
        - CANC (Cancelled)

        It is possible to select multiple values by comma `,` separating them. For multiple values the OR-operator is used. For example _shipmentEventTypeCode=RECE,CONF_  Matches **both** Received (`RECE`) and Confirmed (`CONF`) `ShipmentEvents`.

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list provided here is a subset of the possible values.
      example: [RECE,CONF]
      schema:
        default: [RECE,PENC,CONF,REJE,CANC]
        type: array
        items:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/3.0.0#/components/schemas/bookingShipmentEventTypeCode'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dcsaorg/DCSA_DEO/1.0.0-Beta-1
