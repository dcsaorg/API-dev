openapi: 3.0.0
x-stoplight:
  id: f8c2orhdkdj9m
info:
  title: TestModeOfTransport
  version: '1.0'
servers:
  - url: ' http://localhost:3000'
paths:
  /cs/legs:
    get:
      summary: Get Point to point routings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Leg'
              examples:
                Example 1:
                  value:
                    sequenceNumber: 0
                    modeOfTransport:
                      modeOfTransportType: RAIL_TRUCK
      operationId: get-cs-legs
      x-stoplight:
        id: t33k07w3gpbi6
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
components:
  schemas:
    Leg:
      title: Leg
      x-stoplight:
        id: gvdra7wqarfl9
      type: object
      x-examples: {}
      description: Leg of the Point-to-Point routing. The object "Legs" can be conformed by as many legs as needed and this legs must be identified with a sequence number.
      properties:
        sequenceNumber:
          type: integer
          description: Sequence number of the leg.
          format: int64
        modeOfTransport:
          oneOf:
            - $ref: '#/components/schemas/VesselTransport'
            - $ref: '#/components/schemas/RailTransport'
            - $ref: '#/components/schemas/CombinedTansport'
            - $ref: '#/components/schemas/BargeTransport'
            - $ref: '#/components/schemas/TruckTransport'
          description: The mode of transport as defined by DCSA.
    RailTransport:
      title: Rail Transport
      x-stoplight:
        id: i25r4lynkvib5
      type: object
      description: Transport mode Rail.
      required:
        - modeOfTransportType
      properties:
        modeOfTransportType:
          description: "The mode of transport as defined by DCSA. For the RailTransportCall this needs to be RAIL.\r\n"
          enum:
            - RAIL
        railCar:
          type: string
          x-stoplight:
            id: jo3kslaowrzwd
          description: 'A railcar is a type of railway vehicle that is designed to transport freight or passengers on a railway track. They are also known as rail vehicles, railcars, or rolling stock. Railcars can be powered by an on-board locomotive or they can be pulled by a separate locomotive.'
          maxLength: 50
        railService:
          type: string
          x-stoplight:
            id: l9jt57op1r4n4
          description: A rail service number is a unique identifying number assigned to a specific rail service or train.
          maxLength: 50
        departureID:
          type: string
          x-stoplight:
            id: 933vm6k1qvmlj
          description: A departure ID (also known as a departure reference number) is a unique identifying number or code that is assigned to a specific departure of a rail.
          maxLength: 100
    VesselTransport:
      title: Vessel Transport
      x-stoplight:
        id: hl5ecs1qrq097
      type: object
      description: Transport mode Vessel.
      required:
        - modeOfTransportType
      properties:
        modeOfTransportType:
          description: "The mode of transport as defined by DCSA. For the VesselTransportCall this needs to be VESSEL.\r\n"
          enum:
            - VESSEL
        portVisitReference:
          type: string
          x-stoplight:
            id: wt4tqv5tpjhnl
          example: NLRTM1234589
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
          description: The unique reference that can be used to link different `transportCallReferences` to the same port visit. The reference is provided by the port to uniquely identify a port call.
        transportCallReference:
          type: string
          x-stoplight:
            id: yn4txgmmj9enx
          example: '987e4567'
          maxLength: 100
          pattern: ^\S+(\s+\S+)*$
          description: "A carrier definied reference to a `TransportCall`.\r\n\r\nIn the case the Means of Transport is a `Vessel` and the facility is a `Port/Terminal` - this reference should be considered a Terminal Call Reference."
        carrierServiceName:
          type: string
          x-stoplight:
            id: b2qors0j1j1kc
          description: The name of the service.
          example: Great Lion Service
          maxLength: 50
        carrierServiceCode:
          type: string
          x-stoplight:
            id: bsfl8b8vlgjc8
          description: The carrier-specific code of the service for which the schedule details are published.
          pattern: ^\S+(\s+\S+)*$
          example: FE1
          maxLength: 11
        universalServiceReference:
          type: string
          x-stoplight:
            id: n4k91hvbk91yt
          description: 'A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: `SR\d{5}[A-Z]`. The letters `SR` followed by `5 digits`, followed by a checksum-character as a capital letter from `A to Z`.'
          example: SR12345A
          maxLength: 8
          pattern: '^SR\d{5}[A-Z]$'
        carrierExportVoyageNumber:
          type: string
          x-stoplight:
            id: e4vy8ii4mvko6
          description: The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
          example: 2103S
          pattern: ^\S+(\s+\S+)*$
          maxLength: 50
        universalExportVoyageReference:
          type: string
          x-stoplight:
            id: kg4o8je55u8ni
          example: 2103N
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          description: "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage.The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\r\n\r\n- `2 digits` for the year\r\n- `2 alphanumeric characters` for the sequence number of the voyage\r\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh)."
        carrierImportVoyageNumber:
          type: string
          x-stoplight:
            id: c0uskwnuj42hk
          description: The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
          example: 2103N
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
        universalImportVoyageReference:
          type: string
          x-stoplight:
            id: x5159dt48d662
          example: 2103N
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          description: "A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage.The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\r\n\r\n- `2 digits` for the year\r\n- `2 alphanumeric characters` for the sequence number of the voyage\r\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh)."
        vessel:
          $ref: '#/components/schemas/Vessel'
    BargeTransport:
      title: Barge Transport
      x-stoplight:
        id: galhf6oeud45s
      type: object
      required:
        - modeOfTransportType
      properties:
        modeOfTransportType:
          description: "The mode of transport as defined by DCSA. For the BargeTransportCall this needs to be BARGE.\r\n"
          enum:
            - BARGE
        portVisitReference:
          type: string
          x-stoplight:
            id: 42n2onset3dr2
          description: The unique reference that can be used to link different `transportCallReferences` to the same port visit. The reference is provided by the port to uniquely identify a port call.
          example: NLRTM1234589
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
        transportCallReference:
          type: string
          x-stoplight:
            id: 6xhhv86qyxqq8
          example: '987e4567'
          maxLength: 100
          pattern: ^\S+(\s+\S+)*$
          description: "A carrier definied reference to a `TransportCall`.\r\n\r\nIn the case the Means of Transport is a `Vessel` and the facility is a `Port/Terminal` - this reference should be considered a Terminal Call Reference."
        carrierServiceName:
          type: string
          description: The name of the service.
          example: Great Lion Service
          maxLength: 50
        carrierServiceCode:
          type: string
          description: The carrier-specific code of the service for which the schedule details are published.
          pattern: ^\S+(\s+\S+)*$
          example: FE1
          maxLength: 11
        universalServiceReference:
          type: string
          description: 'A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: `SR\d{5}[A-Z]`. The letters `SR` followed by `5 digits`, followed by a checksum-character as a capital letter from `A to Z`.'
          example: SR12345A
          maxLength: 8
          pattern: '^SR\d{5}[A-Z]$'
        carrierExportVoyageNumber:
          type: string
          description: The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
          example: 2103S
          pattern: ^\S+(\s+\S+)*$
          maxLength: 50
        universalExportVoyageReference:
          type: string
          description: "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage.The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\r\n\r\n- `2 digits` for the year\r\n- `2 alphanumeric characters` for the sequence number of the voyage\r\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh)."
        carrierImportVoyageNumber:
          type: string
          description: The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
          example: 2103N
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
        universalImportVoyageReference:
          type: string
          description: "A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage.The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\r\n\r\n- `2 digits` for the year\r\n- `2 alphanumeric characters` for the sequence number of the voyage\r\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh)."
        Barge:
          $ref: '#/components/schemas/Barge'
    CombinedTansport:
      title: Combined Transport
      x-stoplight:
        id: nr70jitevfqi7
      type: object
      additionalProperties: false
      description: Combined Transport Mode.
      required:
        - modeOfTransportType
      properties:
        modeOfTransportType:
          description: "The mode of transport as defined by DCSA. For the CombinedTransport mode this will be one of the below options.\r\n\r\n- `RAIL_TRUCK`\r\n- `BARGE_TRUCK`\r\n- `BARGE_RAIL`\r\n- `MULTIMODAL`\r\n"
          enum:
            - RAIL_TRUCK
            - BARGE_TRUCK
            - BARGE_RAIL
            - MULTIMODAL
    Vessel:
      title: Vessel
      x-stoplight:
        id: naejd05ams024
      type: object
      properties:
        vesselIMONumber:
          type: string
          x-stoplight:
            id: 1e9pwcicg97u8
          description: 'The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel.'
          minLength: 7
          maxLength: 8
          pattern: '^\d{7,8}$'
          example: '9321483'
        name:
          type: string
          x-stoplight:
            id: v0hurhk0jaulg
          description: The name of the Vessel given by the Vessel Operator and registered with IMO.
          example: King of the Seas
          maxLength: 50
        flag:
          type: string
          x-stoplight:
            id: jscwnmqm2rveh
          pattern: ^\S+$
          maxLength: 2
          example: DE
          description: The flag of the nation whose laws the vessel is registered under. This is the ISO 3166 two-letter country code.
        callSign:
          type: string
          x-stoplight:
            id: v8kwy6fwvfq7i
          pattern: ^\S+(\s+\S+)*$
          example: NCVV
          maxLength: 10
          description: 'A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.'
        vesselOperatorCarrierCode:
          type: string
          x-stoplight:
            id: 8014xsyo5teal
          pattern: ^\S+(\s+\S+)*$
          example: MAEU
          maxLength: 10
          description: The carrier who is in charge of the vessel operation based on either the SMDG or SCAC code lists
        vesselOperatorCarrierCodeListProvider:
          type: string
          x-stoplight:
            id: 7r6lqtnwkwwzj
          description: Identifies the code list provider used for the operator and partner carriercodes.
          example: NMFTA
          enum:
            - SMDG
            - NMFTA
    Barge:
      title: Barge
      x-stoplight:
        id: nlrd16sq9c9n3
      type: object
      properties:
        vesselIMONumber:
          type: string
          description: 'The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel.'
          minLength: 7
          maxLength: 8
          pattern: '^\d{7,8}$'
          example: '9321483'
        name:
          type: string
          description: The name of the Vessel given by the Vessel Operator and registered with IMO.
          example: King of the Seas
          maxLength: 50
        flag:
          type: string
          pattern: ^\S+$
          maxLength: 2
          example: DE
          description: The flag of the nation whose laws the vessel is registered under. This is the ISO 3166 two-letter country code.
        callSign:
          type: string
          pattern: ^\S+(\s+\S+)*$
          example: NCVV
          maxLength: 10
          description: 'A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.'
        vesselOperatorCarrierCode:
          type: string
          pattern: ^\S+(\s+\S+)*$
          example: MAEU
          maxLength: 10
          description: The carrier who is in charge of the vessel operation based on either the SMDG or SCAC code lists
        vesselOperatorCarrierCodeListProvider:
          type: string
          description: Identifies the code list provider used for the operator and partner carriercodes.
          example: NMFTA
          enum:
            - SMDG
            - NMFTA
      description: Barge Transport Mode.
    TruckTransport:
      title: TruckTransport
      x-stoplight:
        id: lkzi3znq2nc76
      type: object
      required:
        - modeOfTransportType
      properties:
        modeOfTransportType:
          x-stoplight:
            id: ncfna39in9bg4
          enum:
            - TRUCK
          description: The mode of transport as defined by DCSA. For the TruckTransportCall this needs to be TRUCK.
        licensePlate:
          type: string
          x-stoplight:
            id: vnjdf55w4a18j
          description: 'A license plate is a tag that is attached to a vehicle and displays a unique number or code assigned to the vehicle. The format, design, and issuing authority for license plates vary by country, state, and province.'
          maxLength: 15
        chasisLicensePlate:
          type: string
          x-stoplight:
            id: sz3b05t2wif9u
          description: A chassis number is a unique identifying number or code assigned to the chassis of a vehicle.It may also be referred to as a "vehicle identification number" (VIN) or "frame number.
          maxLength: 15
      description: Truck Transport mode.
    PointToPoint:
      title: PointToPoint
      x-stoplight:
        id: wnlole6r6pow9
      type: object
      required:
        - placeOfReceipt
        - placeOfDelivery
      properties:
        placeOfReceipt:
          $ref: '#/components/schemas/Place'
        placeOfDelivery:
          $ref: '#/components/schemas/Place'
        transitTime:
          type: integer
          x-stoplight:
            id: w8hyf3snfa0ql
          format: int64
          example: 10
          description: The estimated total time in days that it takes a shipment to move from place of receipt to place of delivery. Transit time includes stop-over time during transshipments and waiting time at connection points.
        legs:
          type: array
          x-stoplight:
            id: 7o1sg5let433p
          items:
            $ref: '#/components/schemas/Leg'
    Place:
      title: Place
      type: object
      required:
        - facilityTypeCode
        - location
        - dateTime
      properties:
        facilityTypeCode:
          description: |
            The code to identify the specific type of facility. The code indicates which role the facility plays during the transportCall.
            - `BORD` (Border)
            - `CLOC` (Customer Location)
            - `COFS` (Container Freight Station)
            - `OFFD` (Off Dock Storage)
            - `DEPO` (Depot)
            - `INTE` (Inland Terminal)
            - `POTE` (Port Terminal)
            - `PBPL` (Pilot Boarding Place)
            - `BRTH` (Berth)
            - `RAMP`  (Ramp)
            - `WAYP` (Waypoint)
          example: POTE
          type: string
        location:
          oneOf:
            - $ref: '#/components/schemas/UNLocationLocation'
            - $ref: '#/components/schemas/AddressLocation'
            - $ref: '#/components/schemas/FacilitySMDGLocation'
        dateTime:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
      x-stoplight:
        id: ir3qdqxdar1l0
    UNLocationLocation:
      title: UNLocationLocation
      type: object
      properties:
        locationName:
          type: string
          description: The name of the location.
          example: Port of Amsterdam
          pattern: '^\S(?:.*\S)?$'
        locationType:
          type: string
          description: Discriminator used to identify this as a `UNLocation` location interface.
          example: UNLO
          maxLength: 4
        UNLocationCode:
          type: string
          description: "The UN Location code specifying where the place is located. The pattern used must be\r\n\r\n - 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)\r\n - 3 characters to code a location within that country. Letters A-Z and numbers from 2-9 can be used\r\n\r\nMore info can be found here: [UN/LOCODE](https://unece.org/trade/cefact/UNLOCODE-Download)"
          pattern: '^[A-Z]{2}[A-Z2-9]{3}$'
          example: NLAMS
          minLength: 5
          maxLength: 5
      x-stoplight:
        id: 98i39v7f4q1d7
    AddressLocation:
      title: AddressLocation
      type: object
      description: An interface used to express a location using an `Address` object.
      required:
        - locationType
        - address
      properties:
        locationName:
          type: string
          example: Port of Amsterdam
          pattern: '^\S(?:.*\S)?$'
          description: The name of the location.
          maxLength: 100
        locationType:
          type: string
          maxLength: 4
          description: Discriminator used to identify this as an `Address` location interface.
          example: ADDR
        address:
          type: object
          description: An object for storing address related information.
          properties:
            street:
              type: string
              example: Ruijggoordweg
              maxLength: 100
            streetNumber:
              type: string
              example: '100'
              maxLength: 50
            floor:
              type: string
              example: N/A
              maxLength: 50
            postCode:
              type: string
              example: 1047 HM
              maxLength: 50
            city:
              type: string
              example: Amsterdam
              maxLength: 65
            stateRegion:
              type: string
              example: North Holland
              maxLength: 65
            countryCode:
              type: string
              pattern: '^[A-Z]{2}$'
              minLength: 2
              maxLength: 2
              description: |
                The 2 characters for the country code using [ISO 3166-1 alpha-2](https://www.iso.org/obp/ui/#iso:pub:PUB500001:en)
              example: NL
      x-stoplight:
        id: 049t5ap19ut2x
    FacilitySMDGLocation:
      title: Facility SMDG Location
      type: object
      description: An interface used to express a location using a `Facility` by the `SMDG` code list. The `facilitySMDGCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.
      required:
        - locationType
        - UNLocationCode
        - facilitySMDGCode
      properties:
        locationName:
          type: string
          description: The name of the location.
          example: Port of Amsterdam
          pattern: '^\S(?:.*\S)?$'
          maxLength: 100
        locationType:
          type: string
          example: FACS
          description: Discriminator used to identify this as a `Facility Location` interface only using `SMDG` code list.
          maxLength: 4
        UNLocationCode:
          type: string
          example: NLAMS
          pattern: '^[A-Z]{2}[A-Z2-9]{3}$'
          minLength: 5
          maxLength: 5
          description: "The UN Location code specifying where the place is located. The pattern used must be\r\n\r\n - 2 characters for the country code using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\r\n - 3 characters to code a location within that country. Letters A-Z and numbers from 2-9 can be used\r\n\r\nMore info can be found here: [UN/LOCODE](https://en.wikipedia.org/wiki/UN/LOCODE)"
        facilitySMDGCode:
          type: string
          example: ACT
          description: "The code used for identifying the specific facility. This code does not include the UN Location Code.\r\n\r\nThe codeList used by SMDG is the [SMDG Terminal Code List](https://smdg.org/wp-content/uploads/Codelists/Terminals/SMDG-Terminal-Code-List-v20210401.xlsx)"
          maxLength: 6
      x-stoplight:
        id: 5l0dili1bsrpv
