openapi: 3.0.0
x-stoplight:
  id: dvjqx44e5ilne
info:
  title: DCSA OpenAPI specification for Track & Trace
  version: 2.2.0
  description: " anaging and sending Shipment-, Transport- and Equipment-events and subscriptions for Track & Trace (T&T). API specification issued by DCSA.org.\r\n\r\nFor explanation to specific values or objects please refer to the [Information Model v3.3](https://dcsa-website.cdn.prismic.io/dcsa-website/65b0a8e4615e73009ec3def6_202108_DCSA_P1_Information-Model-v3.3_TNT22_Final.pdf)\r\n\r\nPolling can be done on the **GET /v2/events** endPoint. It is also possible to setup a subscription on the **/v2/event-subscriptions** endPoints in order to use the push model. Here events are pushed as they occur.\r\n\r\nFor a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/tnt/v2#v220)\r\n"
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: 'https://dcsa.org'
    email: info@dcsa.org
servers:
  - url: 'http://localhost:3000'
paths:
  /v2/events:
    get:
      summary: Find events
      tags: []
      responses: {}
      operationId: get-v2-events
      x-stoplight:
        id: 1sr5r7sai6wkd
      description: "Returns all events filtered by the queryParameters.\r\n\r\n**NB**: It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting.\r\n\r\nExample: shipmentEventTypeCode=DRFT and equipmentEventTypeCode=GTIN\r\n\r\nSince there is no event that can be a ShipmentEvent and an EquipmentEvent at the same time **this will return an empty list!**"
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - SHIPMENT
                - TRANSPORT
                - EQUIPMENT
          in: query
          name: eventType
          description: |
            The type of event(s) to filter by. Possible values are

            - SHIPMENT (Shipment events)
            - TRANSPORT (Transport events)
            - EQUIPMENT (Equipment events)

            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example eventType=SHIPMENT,EQUIPMENT matches both Shipment- and Equipment-events.

            Default value is all event types.
        - schema:
            default:
              - RECE
            type: array
          in: query
          name: shipmentEventTypeCode
          description: |
            The status of the document in the process to filter by. Possible values are
            - RECE (Received)
            - DRFT (Drafted)
            - PENA (Pending Approval)
            - PENU (Pending Update)
            - REJE (Rejected)
            - APPR (Approved)
            - ISSU (Issued)
            - SURR (Surrendered)
            - SUBM (Submitted)
            - VOID (Void)
            - CONF (Confirmed)
            - REQS (Requested)
            - CMPL (Completed)
            - HOLD (On Hold)
            - RELS (Released)

            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>shipmentEventTypeCode=RECE,DRFT</i>  Matches <b>both</b> Received (RECE) and Drafted (DRFT) shipment events.

            Default is all shipmentEventTypeCodes.

            This filter is only relevant when filtering on ShipmentEvents
          example:
            - RECE
            - DRFT
          style: form
        - name: documentTypeCode
          in: query
          description: |
            The documentTypeCode to filter by. Possible values are
            - CBR (Carrier Booking Request Reference)
            - BKG (Booking)
            - SHI (Shipping Instruction)
            - SRM (Shipment Release Message)
            - TRD (Transport Document)
            - ARN (Arrival Notice)
            - VGM (Verified Gross Mass)
            - CAS (Cargo Survey)
            - CUS (Customs Inspection)
            - DGD (Dangerous Goods Declaration)
            - OOG (Out of Gauge)

            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>documentTypeCode=SHI,TRD</i> Matches <b>both</b> ShippingInstruction (SHI) and TransportDocument (TRD) shipment events.

            Default is all documentTypeCodes.

            This filter is only relevant when filtering on ShipmentEvents
          style: form
          schema:
            type: array
            default:
              - CBR
              - BKG
              - SHI
              - SRM
              - TRD
              - ARN
              - VGM
              - CAS
              - CUS
              - DGD
              - OOG
            items:
              type: string
              enum:
                - CBR
                - BKG
                - SHI
                - SRM
                - TRD
                - ARN
                - VGM
                - CAS
                - CUS
                - DGD
                - OOG
        - schema:
            type: string
            maxLength: 35
            example: ABC709951
          in: query
          name: carrierBookingReference
          description: |
            A set of unique characters provided by carrier to identify a booking.  
            Specifying this filter will only return events related to this particular carrierBookingReference.
        - schema:
            type: string
          in: query
          name: bookingReference
          description: Deprecated - use carrierBookingReference instead.
          deprecated: true
        - schema:
            type: string
            format: uuid
          in: query
          name: transportDocumentID
          description: |
            A unique id to identify a transport document.  
            Deprecated - use transportDocumentReference instead transportDocumentReference
          deprecated: true
        - schema:
            type: string
            maxLength: 20
          in: query
          name: transportDocumentReference
          description: |
            A unique number reference allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.  
            Specifying this filter will only return events related to this particular transportDocumentReference.
        - schema:
            type: array
            items:
              type: string
              enum:
                - ARRI
                - DEPA
            default:
              - ARRI
              - DEPA
            example:
              - ARRI
              - DEPA
          in: query
          name: transportEventTypeCode
          description: |
            Identifier for type of Transport event to filter by
            - ARRI (Arrived)
            - DEPA (Departed)

            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>transportEventTypeCode=ARRI,DEPA</i> matches <b>both</b> Arrived (ARRI) and Departed (DEPA) transport events.

            Default is all transportEventTypeCodes.

            This filter is only relevant when filtering on TransportEvents
          style: form
        - schema:
            type: string
            format: uuid
            example: 9679a405-3316-42a5-8533-aba000f5689c
          in: query
          name: scheduleID
          description: |
            ID uniquely identifying a schedule, to filter events by.  
            This filter was added by mistake and is thus deprecated.
          deprecated: true
        - schema:
            type: string
            maxLength: 100
            example: 123e4567-e89b-12d3-a456-426614174000
          in: query
          name: transportCallID
          description: |
            ID uniquely identifying a transport call, to filter events by.  
            Specifying this filter will only return events related to this particular transportCallID
        - schema:
            type: string
            example: '9321483'
            maxLength: 7
          in: query
          name: vesselIMONumber
          description: |
            The identifier of vessel for which schedule details are published. 
            Depending on schedule type, this may not be available yet.  Specifying this filter will only return events related to this particular vesselIMONumber.
        - schema:
            type: string
            example: 2103S
            maxLength: 50
          in: query
          name: carrierVoyageNumber
          description: |
            Filter on the vessel operator-specific identifier of the Voyage.  
            Specifying this filter will only return events related to this particular carrierVoyageNumber.  
            **Deprecated**: Use exportVoyageNumber instead
          deprecated: true
        - schema:
            type: string
            example: 2103S
            maxLength: 50
          in: query
          name: exportVoyageNumber
          description: |
            Filter on the vessel operator-specific identifier of the export Voyage.  
            Specifying this filter will only return events related to this particular exportVoyageNumber.
        - schema:
            type: string
            example: FE1
            maxLength: 5
          in: query
          name: carrierServiceCode
          description: |
            Filter on the carrier specific identifier of the service.  
            Specifying this filter will only return events related to this particular carrierServiceCode
        - schema:
            type: string
            example: FRPAR
            maxLength: 5
          in: query
          name: UNLocationCode
          description: |
            The UN Location code specifying where the place is located.  
            Specifying this filter will only return events related to this particular UN Location code.
        - schema:
            type: string
          in: query
          name: equipmentEventTypeCode
          description: |
            Unique identifier for equipmentEventTypeCode.
            - LOAD (Loaded)
            - DISC (Discharged)
            - GTIN (Gated in)
            - GTOT (Gated out)
            - STUF (Stuffed)
            - STRP (Stripped)
            - PICK (Pick-up)
            - DROP (Drop-off)
            - INSP (Inspected)
            - RSEA (Resealed)
            - RMVD (Removed)

            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>equipmentEventTypeCode=GTIN,GTOT</i> matches <b>both</b> Gated in (GTIN) and Gated out (GTOT) equipment events.

            Default is all equipmentEventTypeCodes.

            This filter is only relevant when filtering on EquipmentEvents
        - schema:
            type: string
            example: APZU4812090
            maxLength: 15
          in: query
          name: equipmentReference
          description: 'Will filter by the unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.  Specifying this filter will only return events related to this particular equipmentReference'
        - schema:
            type: string
          in: query
          name: eventCreatedDateTime
          description: 'Limit the result based on the creating date of the event. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)  eventCreatedDateTime:gte=2021-04-01T14:12:56+01:00  would result in all events created ≥ 2021-04-01T14:12:56+01:00'
        - schema:
            type: string
            minLength: 1
            default: '100'
            example: '100'
          in: query
          name: limit
          description: Maximum number of items to return.
        - schema:
            type: string
            example: fE9mZnNldHw9MTAmbGltaXQ9MTA=
          in: query
          name: cursor
          description: 'A server generated value to specify a specific point in a collection result, used for pagination.'
        - schema:
            type: string
            example: 'carrierBookingReference:DESC'
          in: query
          name: sort
          description: 'A comma-separated list of field names to define the sort order. Field names should be suffixed by a (:) followed by either the keyword ASC (for ascending order) or DESC (for descening order) to specify direction. :ASC may be omitted, in which case ascending order will be used.'
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - {}
              type: object
components:
  schemas: {}
